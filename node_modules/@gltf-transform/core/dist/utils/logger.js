/**
 * # Logger
 *
 * *Logger utility class.*
 *
 * @category Utilities
 */
class Logger {
    /** Constructs a new Logger instance. */
    constructor(verbosity) {
        this.verbosity = verbosity;
    }
    /** Logs an event at level {@link Logger.Verbosity.DEBUG}. */
    debug(text) {
        if (this.verbosity <= Logger.Verbosity.DEBUG) {
            console.debug(text);
        }
    }
    /** Logs an event at level {@link Logger.Verbosity.INFO}. */
    info(text) {
        if (this.verbosity <= Logger.Verbosity.INFO) {
            console.info(text);
        }
    }
    /** Logs an event at level {@link Logger.Verbosity.WARN}. */
    warn(text) {
        if (this.verbosity <= Logger.Verbosity.WARN) {
            console.warn(text);
        }
    }
    /** Logs an event at level {@link Logger.Verbosity.ERROR}. */
    error(text) {
        if (this.verbosity <= Logger.Verbosity.ERROR) {
            console.error(text);
        }
    }
}
/**
 * Log verbosity thresholds.
 */
Logger.Verbosity = {
    /** No events are logged. */
    SILENT: 4,
    /** Only error events are logged. */
    ERROR: 3,
    /** Only error and warn events are logged. */
    WARN: 2,
    /** Only error, warn, and info events are logged. (DEFAULT) */
    INFO: 1,
    /** All events are logged. */
    DEBUG: 0,
};
/** Default logger instance. */
Logger.DEFAULT_INSTANCE = new Logger(Logger.Verbosity.INFO);
export { Logger };
