import { Property } from './property';
/**
 * # ExtensionProperty
 *
 * *Base class for all {@link Property} types that can be attached by an {@link Extension}.*
 *
 * After an {@link Extension} is attached to a glTF {@link Document}, the Extension may be used to
 * construct ExtensionProperty instances, to be referenced throughout the document as prescribed by
 * the Extension. For example, the `KHR_materials_clearcoat` Extension defines a `Clearcoat`
 * ExtensionProperty, which is referenced by {@link Material} Properties in the Document, and may
 * contain references to {@link Texture} properties of its own.
 *
 * For more information on available extensions and their usage, see [Extensions](/extensions).
 *
 * Reference:
 * - [glTF â†’ Extensions](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#specifying-extensions)
 */
export class ExtensionProperty extends Property {
    constructor(graph, _extension) {
        super(graph);
        this._extension = _extension;
        this._extension.addExtensionProperty(this);
    }
    dispose() {
        this._extension.removeExtensionProperty(this);
        super.dispose();
    }
    /** @hidden */
    _validateParent(parent) {
        if (!this.parentTypes.includes(parent.propertyType)) {
            throw new Error(`Parent "${parent.propertyType}" invalid for child "${this.propertyType}".`);
        }
    }
}
