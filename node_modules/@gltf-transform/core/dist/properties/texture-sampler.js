import { PropertyType } from '../constants';
/**
 * # TextureSampler
 *
 * *Settings associated with a particular use of a {@link Texture}.*
 *
 * Different materials may reuse the same texture but with different texture coordinates. For other
 * settings affecting application of a texture, see {@link TextureInfo}.
 *
 * References:
 * - [glTF â†’ Samplers](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#samplers)
 *
 * @category Properties
 */
export class TextureSampler {
    constructor() {
        this.propertyType = PropertyType.TEXTURE_SAMPLER;
        this._magFilter = null;
        this._minFilter = null;
        this._wrapS = 10497 /* REPEAT */;
        this._wrapT = 10497 /* REPEAT */;
    }
    copy(other) {
        this._magFilter = other._magFilter;
        this._minFilter = other._minFilter;
        this._wrapS = other._wrapS;
        this._wrapT = other._wrapT;
        return this;
    }
    /**********************************************************************************************
     * Min/mag filter.
     */
    /** Returns the magnification filter applied to the texture. */
    getMagFilter() { return this._magFilter; }
    /** Sets the magnification filter applied to the texture. */
    setMagFilter(magFilter) {
        this._magFilter = magFilter;
        return this;
    }
    /** Sets the minification filter applied to the texture. */
    getMinFilter() { return this._minFilter; }
    /** Returns the minification filter applied to the texture. */
    setMinFilter(minFilter) {
        this._minFilter = minFilter;
        return this;
    }
    /**********************************************************************************************
     * UV wrapping.
     */
    /** Returns the S (U) wrapping mode for UVs used by the texture. */
    getWrapS() { return this._wrapS; }
    /** Sets the S (U) wrapping mode for UVs used by the texture. */
    setWrapS(wrapS) {
        this._wrapS = wrapS;
        return this;
    }
    /** Returns the T (V) wrapping mode for UVs used by the texture. */
    getWrapT() { return this._wrapT; }
    /** Sets the T (V) wrapping mode for UVs used by the texture. */
    setWrapT(wrapT) {
        this._wrapT = wrapT;
        return this;
    }
}
/** UV wrapping mode. Values correspond to WebGL enums. */
TextureSampler.TextureWrapMode = {
    CLAMP_TO_EDGE: 33071 /* CLAMP_TO_EDGE */,
    MIRRORED_REPEAT: 33648 /* MIRRORED_REPEAT */,
    REPEAT: 10497 /* REPEAT */,
};
/** Magnification filter. Values correspond to WebGL enums. */
TextureSampler.TextureMagFilter = {
    NEAREST: 9728 /* NEAREST */,
    LINEAR: 9729 /* LINEAR */,
};
/** Minification filter. Values correspond to WebGL enums. */
TextureSampler.TextureMinFilter = {
    NEAREST: 9728 /* NEAREST */,
    LINEAR: 9729 /* LINEAR */,
    NEAREST_MIPMAP_NEAREST: 9984 /* NEAREST_MIPMAP_NEAREST */,
    LINEAR_MIPMAP_NEAREST: 9985 /* LINEAR_MIPMAP_NEAREST */,
    NEAREST_MIPMAP_LINEAR: 9986 /* NEAREST_MIPMAP_LINEAR */,
    LINEAR_MIPMAP_LINEAR: 9987 /* LINEAR_MIPMAP_LINEAR */,
};
