/**
 * Model class providing glTF-Transform objects representing each definition in the glTF file, used
 * by a {@link Writer} and its {@link Extension} implementations. Indices of all properties will be
 * consistent with the glTF file.
 */
export class ReaderContext {
    constructor(jsonDoc) {
        this.jsonDoc = jsonDoc;
        this.buffers = [];
        this.bufferViewBuffers = [];
        this.accessors = [];
        this.textures = [];
        this.materials = [];
        this.meshes = [];
        this.cameras = [];
        this.nodes = [];
        this.skins = [];
        this.animations = [];
        this.scenes = [];
    }
    setTextureInfo(textureInfo, textureInfoDef) {
        if (textureInfoDef.texCoord !== undefined) {
            textureInfo.setTexCoord(textureInfoDef.texCoord);
        }
    }
    // eslint-disable-next-line max-len
    setTextureSampler(textureSampler, textureInfoDef) {
        const textureDef = this.jsonDoc.json.textures[textureInfoDef.index];
        if (textureDef.sampler === undefined)
            return;
        const samplerDef = this.jsonDoc.json.samplers[textureDef.sampler];
        if (samplerDef.magFilter !== undefined) {
            textureSampler.setMagFilter(samplerDef.magFilter);
        }
        if (samplerDef.minFilter !== undefined) {
            textureSampler.setMinFilter(samplerDef.minFilter);
        }
        if (samplerDef.wrapS !== undefined) {
            textureSampler.setWrapS(samplerDef.wrapS);
        }
        if (samplerDef.wrapT !== undefined) {
            textureSampler.setWrapT(samplerDef.wrapT);
        }
    }
}
