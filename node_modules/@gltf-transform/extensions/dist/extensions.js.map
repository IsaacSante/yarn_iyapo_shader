{"version":3,"file":"extensions.js","sources":["../src/khr-draco-mesh-compression/decoder.ts","../src/ext-texture-webp/texture-webp.ts","../src/constants.ts","../src/khr-draco-mesh-compression/draco-mesh-compression.ts","../src/khr-lights-punctual/light.ts","../src/khr-lights-punctual/lights-punctual.ts","../../../node_modules/tslib/tslib.es6.js","../src/khr-materials-clearcoat/clearcoat.ts","../src/khr-materials-clearcoat/materials-clearcoat.ts","../src/khr-materials-ior/ior.ts","../src/khr-materials-ior/materials-ior.ts","../src/khr-materials-pbr-specular-glossiness/pbr-specular-glossiness.ts","../src/khr-materials-pbr-specular-glossiness/materials-pbr-specular-glossiness.ts","../src/khr-materials-sheen/sheen.ts","../src/khr-materials-sheen/materials-sheen.ts","../src/khr-materials-specular/specular.ts","../src/khr-materials-specular/materials-specular.ts","../src/khr-materials-transmission/transmission.ts","../src/khr-materials-transmission/materials-transmission.ts","../src/khr-materials-unlit/unlit.ts","../src/khr-materials-unlit/materials-unlit.ts","../src/khr-mesh-quantization/mesh-quantization.ts","../src/khr-texture-basisu/texture-basisu.ts","../src/khr-texture-transform/transform.ts","../src/khr-texture-transform/texture-transform.ts","../src/extensions.ts"],"sourcesContent":["import { TypedArray, TypedArrayConstructor } from '@gltf-transform/core';\n\nexport let decoderModule: DRACO.DecoderModule;\n\n// Initialized when decoder module loads.\nlet COMPONENT_ARRAY: {[key: number]: TypedArrayConstructor};\nlet DATA_TYPE: {[key: number]: DRACO.DataType};\n\nexport function decodeGeometry(decoder: DRACO.Decoder, arrayBuffer: ArrayBuffer): DRACO.Mesh {\n\tlet buffer: DRACO.DecoderBuffer;\n\ttry {\n\t\tbuffer = new decoderModule.DecoderBuffer();\n\t\tbuffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n\t\tconst geometryType = decoder.GetEncodedGeometryType(buffer);\n\n\t\tif (geometryType !== decoderModule.TRIANGULAR_MESH) {\n\t\t\tthrow new Error('Unknown geometry type.');\n\t\t}\n\n\t\tconst dracoMesh = new decoderModule.Mesh();\n\t\tconst status = decoder.DecodeBufferToMesh(buffer, dracoMesh);\n\n\t\tif (!status.ok() || dracoMesh.ptr === 0) {\n\t\t\tthrow new Error('Decoding failure.');\n\t\t}\n\n\t\treturn dracoMesh;\n\t} finally {\n\t\tdecoderModule.destroy(buffer);\n\t}\n}\n\nexport function decodeIndex(decoder: DRACO.Decoder, mesh: DRACO.Mesh): Uint32Array {\n\tconst numFaces = mesh.num_faces();\n\tconst numIndices = numFaces * 3;\n\tconst byteLength = numIndices * Uint32Array.BYTES_PER_ELEMENT;\n\n\tconst ptr = decoderModule._malloc(byteLength);\n\tdecoder.GetTrianglesUInt32Array(mesh, byteLength, ptr);\n\tconst indices = new Uint32Array(decoderModule.HEAP32.buffer, ptr, numIndices).slice();\n\tdecoderModule._free(ptr);\n\n\treturn indices;\n}\n\nexport function decodeAttribute(\n\t\tdecoder: DRACO.Decoder,\n\t\tmesh: DRACO.Mesh,\n\t\tattribute: DRACO.Attribute,\n\t\taccessorDef: GLTF.IAccessor): TypedArray {\n\n\tconst dataType = DATA_TYPE[accessorDef.componentType];\n\tconst ArrayCtor = COMPONENT_ARRAY[accessorDef.componentType];\n\tconst numComponents = attribute.num_components();\n\tconst numPoints = mesh.num_points();\n\tconst numValues = numPoints * numComponents;\n\tconst byteLength: number = numValues * ArrayCtor.BYTES_PER_ELEMENT;\n\n\tconst ptr = decoderModule._malloc(byteLength);\n\tdecoder.GetAttributeDataArrayForAllPoints(mesh, attribute, dataType, byteLength, ptr);\n\tconst array: TypedArray = new ArrayCtor(decoderModule.HEAPF32.buffer, ptr, numValues).slice();\n\tdecoderModule._free(ptr);\n\n\treturn array;\n}\n\nexport function initDecoderModule (_decoderModule: DRACO.DecoderModule): void {\n\tdecoderModule = _decoderModule;\n\n\tCOMPONENT_ARRAY = {\n\t\t[GLTF.AccessorComponentType.FLOAT]: Float32Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_INT]: Uint32Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_SHORT]: Uint16Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_BYTE]: Uint8Array,\n\t\t[GLTF.AccessorComponentType.SHORT]: Int16Array,\n\t\t[GLTF.AccessorComponentType.BYTE]: Int8Array,\n\t};\n\n\tDATA_TYPE = {\n\t\t[GLTF.AccessorComponentType.FLOAT]: decoderModule.DT_FLOAT32,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_INT]: decoderModule.DT_UINT32,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_SHORT]: decoderModule.DT_UINT16,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_BYTE]: decoderModule.DT_UINT8,\n\t\t[GLTF.AccessorComponentType.SHORT]: decoderModule.DT_INT16,\n\t\t[GLTF.AccessorComponentType.BYTE]: decoderModule.DT_INT8,\n\t};\n}\n\n","import { Extension, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { EXT_TEXTURE_WEBP } from '../constants';\n\nconst NAME = EXT_TEXTURE_WEBP;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureWebP extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.TEXTURE];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic provide(context: ReaderContext): this {\n\t\tcontext.jsonDoc.json.textures.forEach((textureDef) => {\n\t\t\tif (textureDef.extensions && textureDef.extensions[NAME]) {\n\t\t\t\ttextureDef.source = textureDef.extensions[NAME].source;\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listTextures()\n\t\t\t.forEach((texture) => {\n\t\t\t\tif (texture.getMimeType() === 'image/webp') {\n\t\t\t\t\tconst imageIndex = context.imageIndexMap.get(texture);\n\t\t\t\t\tjsonDoc.json.textures.forEach((textureDef) => {\n\t\t\t\t\t\tif (textureDef.source === imageIndex) {\n\t\t\t\t\t\t\ttextureDef.extensions = textureDef.extensions || {}\n\t\t\t\t\t\t\ttextureDef.extensions[NAME] = {source: textureDef.source};\n\t\t\t\t\t\t\tdelete textureDef.source;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","export const EXT_TEXTURE_WEBP = 'EXT_texture_webp';\nexport const KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nexport const KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport const KHR_MATERIALS_CLEARCOAT = 'KHR_materials_clearcoat';\nexport const KHR_MATERIALS_IOR = 'KHR_materials_ior';\nexport const KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS = 'KHR_materials_pbrSpecularGlossiness';\nexport const KHR_MATERIALS_SHEEN = 'KHR_materials_sheen';\nexport const KHR_MATERIALS_SPECULAR = 'KHR_materials_specular';\nexport const KHR_MATERIALS_TRANSMISSION = 'KHR_materials_transmission';\nexport const KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport const KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\nexport const KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nexport const KHR_TEXTURE_TRANSFORM = 'KHR_texture_transform';\n","import { Extension, GLB_BUFFER, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_DRACO_MESH_COMPRESSION } from '../constants';\nimport { decodeAttribute, decodeGeometry, decodeIndex, initDecoderModule } from './decoder';\n\nconst NAME = KHR_DRACO_MESH_COMPRESSION;\n\ninterface DracoPrimitiveExtension {\n\tbufferView: number;\n\tattributes: {\n\t\t[name: string]: number;\n\t};\n}\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class DracoMeshCompression extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.PRIMITIVE];\n\tpublic readonly dependencies = ['draco3d.decoder'];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tprivate _decoderModule: DRACO.DecoderModule;\n\n\tpublic install(key: string, dependency: unknown): this {\n\t\tif (key === 'draco3d.decoder') {\n\t\t\tthis._decoderModule = dependency as DRACO.DecoderModule;\n\t\t\tinitDecoderModule(this._decoderModule);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic provide(context: ReaderContext): this {\n\t\tif (!this._decoderModule) {\n\t\t\tthrow new Error('Please install extension dependency, \"draco3d.decoder\".');\n\t\t}\n\n\t\tconst logger = this.doc.getLogger();\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst decoder = new this._decoderModule.Decoder();\n\t\tconst dracoMeshes: Map<number, DRACO.Mesh> = new Map();\n\n\t\tfor (const meshDef of jsonDoc.json.meshes) {\n\t\t\tfor (const primDef of meshDef.primitives) {\n\t\t\t\tif (!primDef.extensions || !primDef.extensions[NAME]) continue;\n\n\t\t\t\tconst dracoDef = primDef.extensions[NAME] as DracoPrimitiveExtension;\n\t\t\t\tlet dracoMesh = dracoMeshes.get(dracoDef.bufferView);\n\n\t\t\t\tif (!dracoMesh) {\n\t\t\t\t\tconst bufferViewDef = jsonDoc.json.bufferViews[dracoDef.bufferView];\n\t\t\t\t\tconst bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n\t\t\t\t\tconst resource = bufferDef.uri\n\t\t\t\t\t\t? jsonDoc.resources[bufferDef.uri]\n\t\t\t\t\t\t: jsonDoc.resources[GLB_BUFFER];\n\n\t\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\t\tconst byteLength = bufferViewDef.byteLength;\n\t\t\t\t\tconst compressedData = new Uint8Array(resource, byteOffset, byteLength);\n\n\t\t\t\t\tdracoMesh = decodeGeometry(decoder, compressedData);\n\t\t\t\t\tdracoMeshes.set(dracoDef.bufferView, dracoMesh);\n\t\t\t\t\tlogger.debug(`Decompressed ${compressedData.byteLength} bytes.`);\n\t\t\t\t}\n\n\t\t\t\t// Attributes.\n\t\t\t\tfor (const semantic in primDef.attributes) {\n\t\t\t\t\tconst accessorDef = context.jsonDoc.json.accessors[primDef.attributes[semantic]];\n\t\t\t\t\tconst dracoAttribute = decoder.GetAttributeByUniqueId(dracoMesh, dracoDef.attributes[semantic]);\n\t\t\t\t\tconst attributeArray = decodeAttribute(decoder, dracoMesh, dracoAttribute, accessorDef);\n\t\t\t\t\tcontext.accessors[primDef.attributes[semantic]].setArray(attributeArray);\n\t\t\t\t}\n\n\t\t\t\t// Indices.\n\t\t\t\tconst indicesArray = decodeIndex(decoder, dracoMesh);\n\t\t\t\tcontext.accessors[primDef.indices].setArray(indicesArray);\n\t\t\t}\n\n\t\t\tthis._decoderModule.destroy(decoder);\n\t\t\tfor (const dracoMesh of Array.from(dracoMeshes.values())) {\n\t\t\t\tthis._decoderModule.destroy(dracoMesh);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\tthis.dispose(); // Writes aren't implemented, so remove extension after unpacking.\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic write(context: WriterContext): this {\n\t\tthis.doc.getLogger().warn(`Writing ${this.extensionName} not yet implemented.`);\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, PropertyType, vec3 } from '@gltf-transform/core';\nimport { ColorUtils } from '@gltf-transform/core';\nimport { KHR_LIGHTS_PUNCTUAL } from '../constants';\n\nexport enum LightType {\n\tPOINT = 'point',\n\tSPOT = 'spot',\n\tDIRECTIONAL = 'directional',\n}\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Light extends ExtensionProperty {\n\tpublic readonly propertyType = 'Light';\n\tpublic readonly parentTypes = [PropertyType.NODE];\n\tpublic readonly extensionName = KHR_LIGHTS_PUNCTUAL;\n\tpublic static EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n\n\tprivate _color: vec3 = [1, 1, 1];\n\tprivate _intensity = 1;\n\tprivate _type: LightType;\n\tprivate _range: number = undefined;\n\n\tprivate _innerConeAngle = 0;\n\tprivate _outerConeAngle = Math.PI / 4;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._color = [...other._color] as vec3;\n\t\tthis._intensity = other._intensity;\n\t\tthis._type = other._type;\n\t\tthis._range = other._range;\n\n\t\tthis._innerConeAngle = other._innerConeAngle;\n\t\tthis._outerConeAngle = other._outerConeAngle;\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * COLOR.\n\t */\n\n\t/** Components (R, G, B) of light's color in linear space. */\n\tpublic getColor(): vec3 { return this._color; }\n\n\t/** Components (R, G, B) of light's color in linear space. */\n\tpublic setColor(color: vec3): this {\n\t\tthis._color = color;\n\t\treturn this;\n\t}\n\n\t/** Hex light color in sRGB colorspace. */\n\tpublic getColorHex(): number { return ColorUtils.factorToHex(this._color); }\n\n\t/** Hex light color in sRGB colorspace. */\n\tpublic setColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._color);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * INTENSITY.\n\t */\n\n\t/**\n\t * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n\t * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n\t */\n\tpublic getIntensity(): number { return this._intensity; }\n\n\t/**\n\t * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n\t * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n\t */\n\tpublic setIntensity(intensity: number): this {\n\t\tthis._intensity = intensity;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * TYPE.\n\t */\n\n\t/** Type. */\n\tpublic getType(): LightType { return this._type; }\n\n\t/** Type. */\n\tpublic setType(type: LightType): this {\n\t\tthis._type = type;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * RANGE.\n\t */\n\n\t/**\n\t * Hint defining a distance cutoff at which the light's intensity may be considered to have\n\t * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n\t * is assumed to be infinite.\n\t */\n\tpublic getRange(): number { return this._range; }\n\n\t/**\n\t * Hint defining a distance cutoff at which the light's intensity may be considered to have\n\t * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n\t * is assumed to be infinite.\n\t */\n\tpublic setRange(range: number): this {\n\t\tthis._range = range;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * SPOT LIGHT PROPERTIES\n\t */\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and\n\t * < outerConeAngle.\n\t */\n\tpublic getInnerConeAngle(): number { return this._innerConeAngle; }\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and\n\t * < outerConeAngle.\n\t */\n\tpublic setInnerConeAngle(innerConeAngle: number): this {\n\t\tthis._innerConeAngle = innerConeAngle;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n\t * ≤ PI / 2.0.\n\t */\n\tpublic getOuterConeAngle(): number { return this._outerConeAngle; }\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n\t * ≤ PI / 2.0.\n\t */\n\tpublic setOuterConeAngle(outerConeAngle: number): this {\n\t\tthis._outerConeAngle = outerConeAngle;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_LIGHTS_PUNCTUAL } from '../constants';\nimport { Light, LightType } from './light';\n\nconst NAME = KHR_LIGHTS_PUNCTUAL;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class LightsPunctual extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createLight(): Light {\n\t\treturn new Light(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tif (!jsonDoc.json.extensions || !jsonDoc.json.extensions[NAME]) return this;\n\n\t\tconst lightDefs = jsonDoc.json.extensions[NAME].lights || [];\n\t\tconst lights = lightDefs.map((lightDef) => {\n\t\t\tconst light = this.createLight()\n\t\t\t\t.setName(lightDef.name || '')\n\t\t\t\t.setType(lightDef.type);\n\n\t\t\tif (lightDef.color !== undefined) light.setColor(lightDef.color);\n\t\t\tif (lightDef.intensity !== undefined) light.setIntensity(lightDef.intensity);\n\t\t\tif (lightDef.range !== undefined) light.setRange(lightDef.range);\n\n\t\t\tif (lightDef.innerConeAngle !== undefined) {\n\t\t\t\tlight.setInnerConeAngle(lightDef.innerConeAngle);\n\t\t\t}\n\t\t\tif (lightDef.outerConeAngle !== undefined) {\n\t\t\t\tlight.setOuterConeAngle(lightDef.outerConeAngle);\n\t\t\t}\n\n\t\t\treturn light;\n\t\t});\n\n\t\tjsonDoc.json.nodes.forEach((nodeDef, nodeIndex) => {\n\t\t\tif (!nodeDef.extensions || !nodeDef.extensions[NAME]) return;\n\t\t\tcontext.nodes[nodeIndex].setExtension(NAME, lights[nodeDef.extensions[NAME].light]);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tif (this.properties.size === 0) return this;\n\n\t\tconst lightDefs = [];\n\t\tconst lightIndexMap = new Map<Light, number>();\n\n\t\tfor (const property of this.properties) {\n\t\t\tconst light = property as Light;\n\t\t\tconst lightDef = {\n\t\t\t\ttype: light.getType(),\n\t\t\t\tcolor: light.getColor(),\n\t\t\t\tintensity: light.getIntensity(),\n\t\t\t\trange: light.getRange(),\n\t\t\t};\n\n\t\t\tif (light.getName()) lightDef['name'] = light.getName();\n\n\t\t\tif (light.getType() === LightType.SPOT) {\n\t\t\t\tlightDef['innerConeAngle'] = light.getInnerConeAngle();\n\t\t\t\tlightDef['outerConeAngle'] = light.getOuterConeAngle();\n\t\t\t}\n\n\t\t\tlightDefs.push(lightDef);\n\t\t\tlightIndexMap.set(light, lightDefs.length - 1)\n\t\t}\n\n\t\tthis.doc.getRoot()\n\t\t\t.listNodes()\n\t\t\t.forEach((node) => {\n\t\t\t\tconst light = node.getExtension<Light>(NAME);\n\t\t\t\tif (light) {\n\t\t\t\t\tconst nodeIndex = context.nodeIndexMap.get(node);\n\t\t\t\t\tconst nodeDef = jsonDoc.json.nodes[nodeIndex];\n\t\t\t\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\t\t\t\tnodeDef.extensions[NAME] = {light: lightIndexMap.get(light)};\n\t\t\t\t}\n\t\t\t});\n\n\t\tjsonDoc.json.extensions = jsonDoc.json.extensions || {};\n\t\tjsonDoc.json.extensions[NAME] = {lights: lightDefs};\n\n\t\treturn this;\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { COPY_IDENTITY, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo } from '@gltf-transform/core';\nimport { KHR_MATERIALS_CLEARCOAT } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Clearcoat extends ExtensionProperty {\n\tpublic readonly propertyType = 'Clearcoat';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_CLEARCOAT;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\n\tprivate _clearcoatFactor = 0.0;\n\tprivate _clearcoatRoughnessFactor = 0.0;\n\tprivate _clearcoatNormalScale = 1.0;\n\n\t@GraphChild private clearcoatTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private clearcoatRoughnessTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatRoughnessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatRoughnessTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private clearcoatNormalTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatNormalTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatNormalTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._clearcoatFactor = other._clearcoatFactor;\n\t\tthis._clearcoatRoughnessFactor = other._clearcoatRoughnessFactor;\n\t\tthis._clearcoatNormalScale = other._clearcoatNormalScale;\n\n\t\tif (other.clearcoatTexture) {\n\t\t\tthis.setClearcoatTexture(resolve(other.clearcoatTexture.getChild()));\n\t\t\tthis.getClearcoatTextureInfo().copy(resolve(other.clearcoatTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.clearcoatRoughnessTexture) {\n\t\t\tthis.setClearcoatRoughnessTexture(resolve(other.clearcoatRoughnessTexture.getChild()));\n\t\t\tthis.getClearcoatRoughnessTextureInfo().copy(resolve(other.clearcoatRoughnessTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.clearcoatNormalTexture) {\n\t\t\tthis.setClearcoatNormalTexture(resolve(other.clearcoatNormalTexture.getChild()));\n\t\t\tthis.getClearcoatNormalTextureInfo().copy(resolve(other.clearcoatNormalTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.clearcoatTextureInfo.getChild().dispose();\n\t\tthis.clearcoatRoughnessTextureInfo.getChild().dispose();\n\t\tthis.clearcoatNormalTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat.\n\t */\n\n\t/** Clearcoat; linear multiplier. See {@link getClearcoatTexture}. */\n\tpublic getClearcoatFactor(): number { return this._clearcoatFactor; }\n\n\t/** Clearcoat; linear multiplier. See {@link getClearcoatTexture}. */\n\tpublic setClearcoatFactor(clearcoatFactor: number): this {\n\t\tthis._clearcoatFactor = clearcoatFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat texture; linear multiplier. The `r` channel of this texture specifies an amount\n\t * [0-1] of coating over the surface of the material, which may have its own roughness and\n\t * normal map properties.\n\t */\n\tpublic getClearcoatTexture(): Texture {\n\t\treturn this.clearcoatTexture ? this.clearcoatTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatTexture ? this.clearcoatTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat texture. See {@link getClearcoatTexture}. */\n\tpublic setClearcoatTexture(texture: Texture): this {\n\t\tthis.clearcoatTexture = this.graph.link('clearcoatTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat roughness.\n\t */\n\n\t/** Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}. */\n\tpublic getClearcoatRoughnessFactor(): number { return this._clearcoatRoughnessFactor; }\n\n\t/** Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}. */\n\tpublic setClearcoatRoughnessFactor(clearcoatRoughnessFactor: number): this {\n\t\tthis._clearcoatRoughnessFactor = clearcoatRoughnessFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat roughness texture; linear multiplier. The `g` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic getClearcoatRoughnessTexture(): Texture {\n\t\treturn this.clearcoatRoughnessTexture ? this.clearcoatRoughnessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatRoughnessTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatRoughnessTexture ? this.clearcoatRoughnessTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat roughness texture. See {@link getClearcoatRoughnessTexture}. */\n\tpublic setClearcoatRoughnessTexture(texture: Texture): this {\n\t\tthis.clearcoatRoughnessTexture = this.graph.link('clearcoatRoughnessTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat normals.\n\t */\n\n\t/** Clearcoat normal scale. See {@link getClearcoatNormalTexture}. */\n\tpublic getClearcoatNormalScale(): number { return this._clearcoatNormalScale; }\n\n\t/** Clearcoat normal scale. See {@link getClearcoatNormalTexture}. */\n\tpublic setClearcoatNormalScale(clearcoatNormalScale: number): this {\n\t\tthis._clearcoatNormalScale = clearcoatNormalScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat normal map. Independent of the material base layer normal map.\n\t */\n\tpublic getClearcoatNormalTexture(): Texture {\n\t\treturn this.clearcoatNormalTexture ? this.clearcoatNormalTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat normal texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatNormalTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatNormalTexture ? this.clearcoatNormalTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat normal texture. See {@link getClearcoatNormalTexture}. */\n\tpublic setClearcoatNormalTexture(texture: Texture): this {\n\t\tthis.clearcoatNormalTexture = this.graph.link('clearcoatNormalTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_CLEARCOAT } from '../constants';\nimport { Clearcoat } from './clearcoat';\n\nconst NAME = KHR_MATERIALS_CLEARCOAT;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsClearcoat extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createClearcoat(): Clearcoat {\n\t\treturn new Clearcoat(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst clearcoat = this.createClearcoat();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, clearcoat);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatFactor !== undefined) {\n\t\t\t\t\tclearcoat.setClearcoatFactor(materialDef.extensions[NAME].clearcoatFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatRoughnessFactor !== undefined) {\n\t\t\t\t\tclearcoat.setClearcoatRoughnessFactor(materialDef.extensions[NAME].clearcoatRoughnessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatRoughnessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatRoughnessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatRoughnessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatRoughnessTextureInfo(), textureInfoDef);;\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatNormalTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatNormalTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatNormalTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatNormalTextureInfo(), textureInfoDef);\n\t\t\t\t\tif (textureInfoDef.scale !== undefined) {\n\t\t\t\t\t\tclearcoat.setClearcoatNormalScale(textureInfoDef.scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst clearcoat = material.getExtension<Clearcoat>(NAME);\n\t\t\t\tif (clearcoat) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tclearcoatFactor: clearcoat.getClearcoatFactor(),\n\t\t\t\t\t\tclearcoatRoughnessFactor: clearcoat.getClearcoatRoughnessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (clearcoat.getClearcoatTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (clearcoat.getClearcoatRoughnessTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatRoughnessTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatRoughnessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (clearcoat.getClearcoatNormalTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatNormalTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatNormalTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatNormalTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t\tif (clearcoat.getClearcoatNormalScale() !== 1) {\n\t\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatNormalTexture.scale = clearcoat.getClearcoatNormalScale();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, PropertyType } from '@gltf-transform/core';\nimport { KHR_MATERIALS_IOR } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class IOR extends ExtensionProperty {\n\tpublic readonly propertyType = 'IOR';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_IOR;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_IOR;\n\n\tprivate _ior = 0.0;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._ior = other._ior;\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * IOR.\n\t */\n\n\t/** IOR. */\n\tpublic getIOR(): number { return this._ior; }\n\n\t/** IOR. */\n\tpublic setIOR(ior: number): this {\n\t\tthis._ior = ior;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_IOR } from '../constants';\nimport { IOR } from './ior';\n\nconst NAME = KHR_MATERIALS_IOR;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsIOR extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createIOR(): IOR {\n\t\treturn new IOR(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst ior = this.createIOR();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, ior);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].ior !== undefined) {\n\t\t\t\t\tior.setIOR(materialDef.extensions[NAME].ior);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst ior = material.getExtension<IOR>(NAME);\n\t\t\t\tif (ior) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tior: ior.getIOR(),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3, vec4 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class PBRSpecularGlossiness extends ExtensionProperty {\n\tpublic readonly propertyType = 'PBRSpecularGlossiness';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n\tprivate _diffuseFactor: vec4 = [1.0, 1.0, 1.0, 1.0];\n\tprivate _specularFactor: vec3 = [1.0, 1.0, 1.0];\n\tprivate _glossinessFactor = 1.0;\n\n\t@GraphChild private diffuseTexture: Link<this, Texture> = null;\n\t@GraphChild private diffuseTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('diffuseTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private specularGlossinessTexture: Link<this, Texture> = null;\n\t@GraphChild private specularGlossinessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('specularGlossinessTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._diffuseFactor = other._diffuseFactor;\n\t\tthis._specularFactor = other._specularFactor;\n\t\tthis._glossinessFactor = other._glossinessFactor;\n\n\t\tif (other.diffuseTexture) {\n\t\t\tthis.setDiffuseTexture(resolve(other.diffuseTexture.getChild()));\n\t\t\tthis.getDiffuseTextureInfo().copy(resolve(other.diffuseTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.specularGlossinessTexture) {\n\t\t\tthis.setSpecularGlossinessTexture(resolve(other.specularGlossinessTexture.getChild()));\n\t\t\tthis.getSpecularGlossinessTextureInfo().copy(resolve(other.specularGlossinessTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.diffuseTextureInfo.getChild().dispose();\n\t\tthis.specularGlossinessTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Diffuse.\n\t */\n\n\t/** Diffuse; linear multiplier. See {@link getDiffuseTexture}. */\n\tpublic getDiffuseFactor(): vec4 { return this._diffuseFactor; }\n\n\t/** Diffuse; linear multiplier. See {@link getDiffuseTexture}. */\n\tpublic setDiffuseFactor(diffuseFactor: vec4): this {\n\t\tthis._diffuseFactor = diffuseFactor;\n\t\treturn this;\n\t}\n\n\t/** Diffuse; hex color in sRGB colorspace. */\n\tpublic getDiffuseHex(): number { return ColorUtils.factorToHex(this._diffuseFactor); }\n\n\t/** Diffuse; hex color in sRGB colorspace. */\n\tpublic setDiffuseHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._diffuseFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Diffuse texture; linear multiplier. Alternative to baseColorTexture used within the\n\t * spec/gloss PBR workflow.\n\t */\n\tpublic getDiffuseTexture(): Texture {\n\t\treturn this.diffuseTexture ? this.diffuseTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its diffuse texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getDiffuseTextureInfo(): TextureInfo {\n\t\treturn this.diffuseTexture ? this.diffuseTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets diffuse texture. See {@link getDiffuseTexture}. */\n\tpublic setDiffuseTexture(texture: Texture): this {\n\t\tthis.diffuseTexture = this.graph.link('diffuseTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Specular.\n\t */\n\n\t/** Specular; linear multiplier. */\n\tpublic getSpecularFactor(): vec3 { return this._specularFactor; }\n\n\t/** Specular; linear multiplier. */\n\tpublic setSpecularFactor(specularFactor: vec3): this {\n\t\tthis._specularFactor = specularFactor;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Glossiness.\n\t */\n\n\t/** Glossiness; linear multiplier. */\n\tpublic getGlossinessFactor(): number { return this._glossinessFactor; }\n\n\t/** Glossiness; linear multiplier. */\n\tpublic setGlossinessFactor(glossinessFactor: number): this {\n\t\tthis._glossinessFactor = glossinessFactor;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Specular/Glossiness.\n\t */\n\n\t/** Spec/gloss texture; linear multiplier. */\n\tpublic getSpecularGlossinessTexture(): Texture {\n\t\treturn this.specularGlossinessTexture ? this.specularGlossinessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its spec/gloss texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSpecularGlossinessTextureInfo(): TextureInfo {\n\t\treturn this.specularGlossinessTexture ? this.specularGlossinessTextureInfo.getChild() : null;\n\t}\n\n\t/** Spec/gloss texture; linear multiplier. */\n\tpublic setSpecularGlossinessTexture(texture: Texture): this {\n\t\tthis.specularGlossinessTexture = this.graph.link('specularGlossinessTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS } from '../constants';\nimport { PBRSpecularGlossiness } from './pbr-specular-glossiness';\n\nconst NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsPBRSpecularGlossiness extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createPBRSpecularGlossiness(): PBRSpecularGlossiness {\n\t\treturn new PBRSpecularGlossiness(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst specGloss = this.createPBRSpecularGlossiness();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, specGloss);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].diffuseFactor !== undefined) {\n\t\t\t\t\tspecGloss.setDiffuseFactor(materialDef.extensions[NAME].diffuseFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularFactor !== undefined) {\n\t\t\t\t\tspecGloss.setSpecularFactor(materialDef.extensions[NAME].specularFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].glossinessFactor !== undefined) {\n\t\t\t\t\tspecGloss.setGlossinessFactor(materialDef.extensions[NAME].glossinessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].diffuseTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].diffuseTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecGloss.setDiffuseTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specGloss.getDiffuseTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularGlossinessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].specularGlossinessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecGloss.setSpecularGlossinessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specGloss.getSpecularGlossinessTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst specGloss = material.getExtension<PBRSpecularGlossiness>(NAME);\n\t\t\t\tif (specGloss) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tdiffuseFactor: specGloss.getDiffuseFactor(),\n\t\t\t\t\t\tspecularFactor: specGloss.getSpecularFactor(),\n\t\t\t\t\t\tglossinessFactor: specGloss.getGlossinessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (specGloss.getDiffuseTexture()) {\n\t\t\t\t\t\tconst texture = specGloss.getDiffuseTexture();\n\t\t\t\t\t\tconst textureInfo = specGloss.getDiffuseTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].diffuseTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (specGloss.getSpecularGlossinessTexture()) {\n\t\t\t\t\t\tconst texture = specGloss.getSpecularGlossinessTexture();\n\t\t\t\t\t\tconst textureInfo = specGloss.getSpecularGlossinessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].specularGlossinessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SHEEN } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Sheen extends ExtensionProperty {\n\tpublic readonly propertyType = 'Sheen';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_SHEEN;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\n\tprivate _sheenColorFactor: vec3 = [0.0, 0.0, 0.0];\n\tprivate _sheenRoughnessFactor = 0.0;\n\n\t@GraphChild private sheenColorTexture: Link<this, Texture> = null;\n\t@GraphChild private sheenColorTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('sheenColorTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private sheenRoughnessTexture: Link<this, Texture> = null;\n\t@GraphChild private sheenRoughnessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('sheenRoughnessTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._sheenColorFactor = other._sheenColorFactor;\n\t\tthis._sheenRoughnessFactor = other._sheenRoughnessFactor;\n\n\t\tif (other.sheenColorTexture) {\n\t\t\tthis.setSheenColorTexture(resolve(other.sheenColorTexture.getChild()));\n\t\t\tthis.getSheenColorTextureInfo().copy(resolve(other.sheenColorTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.sheenRoughnessTexture) {\n\t\t\tthis.setSheenRoughnessTexture(resolve(other.sheenRoughnessTexture.getChild()));\n\t\t\tthis.getSheenRoughnessTextureInfo().copy(resolve(other.sheenRoughnessTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.sheenColorTextureInfo.getChild().dispose();\n\t\tthis.sheenRoughnessTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Sheen color.\n\t */\n\n\t/** Sheen; linear multiplier. */\n\tpublic getSheenColorFactor(): vec3 { return this._sheenColorFactor; }\n\n\t/** Sheen; hex color in sRGB colorspace. */\n\tpublic getSheenColorHex(): number { return ColorUtils.factorToHex(this._sheenColorFactor); }\n\n\t/** Sheen; linear multiplier. */\n\tpublic setSheenColorFactor(sheenColorFactor: vec3): this {\n\t\tthis._sheenColorFactor = sheenColorFactor;\n\t\treturn this;\n\t}\n\n\t/** Sheen; hex color in sRGB colorspace. */\n\tpublic setSheenColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._sheenColorFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sheen color texture, in sRGB colorspace.\n\t */\n\tpublic getSheenColorTexture(): Texture {\n\t\treturn this.sheenColorTexture ? this.sheenColorTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its sheen color texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSheenColorTextureInfo(): TextureInfo {\n\t\treturn this.sheenColorTexture ? this.sheenColorTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets sheen color texture. See {@link getSheenColorTexture}. */\n\tpublic setSheenColorTexture(texture: Texture): this {\n\t\tthis.sheenColorTexture = this.graph.link('sheenColorTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Sheen roughness.\n\t */\n\n\t/** Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}. */\n\tpublic getSheenRoughnessFactor(): number { return this._sheenRoughnessFactor; }\n\n\t/** Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}. */\n\tpublic setSheenRoughnessFactor(sheenRoughnessFactor: number): this {\n\t\tthis._sheenRoughnessFactor = sheenRoughnessFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sheen roughness texture; linear multiplier. The `a` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic getSheenRoughnessTexture(): Texture {\n\t\treturn this.sheenRoughnessTexture ? this.sheenRoughnessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its sheen roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getSheenRoughnessTextureInfo(): TextureInfo {\n\t\treturn this.sheenRoughnessTexture ? this.sheenRoughnessTextureInfo.getChild() : null;\n\t}\n\n\t/**\n\t * Sets sheen roughness texture.  The `a` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic setSheenRoughnessTexture(texture: Texture): this {\n\t\tthis.sheenRoughnessTexture = this.graph.link('sheenRoughnessTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SHEEN } from '../constants';\nimport { Sheen } from './sheen';\n\nconst NAME = KHR_MATERIALS_SHEEN;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsSheen extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createSheen(): Sheen {\n\t\treturn new Sheen(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst sheen = this.createSheen();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, sheen);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].sheenColorFactor !== undefined) {\n\t\t\t\t\tsheen.setSheenColorFactor(materialDef.extensions[NAME].sheenColorFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].sheenRoughnessFactor !== undefined) {\n\t\t\t\t\tsheen.setSheenRoughnessFactor(materialDef.extensions[NAME].sheenRoughnessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].sheenColorTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].sheenColorTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tsheen.setSheenColorTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(sheen.getSheenColorTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].sheenRoughnessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].sheenRoughnessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tsheen.setSheenRoughnessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(sheen.getSheenRoughnessTextureInfo(), textureInfoDef);;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst sheen = material.getExtension<Sheen>(NAME);\n\t\t\t\tif (sheen) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tsheenColorFactor: sheen.getSheenColorFactor(),\n\t\t\t\t\t\tsheenRoughnessFactor: sheen.getSheenRoughnessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (sheen.getSheenColorTexture()) {\n\t\t\t\t\t\tconst texture = sheen.getSheenColorTexture();\n\t\t\t\t\t\tconst textureInfo = sheen.getSheenColorTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].sheenColorTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (sheen.getSheenRoughnessTexture()) {\n\t\t\t\t\t\tconst texture = sheen.getSheenRoughnessTexture();\n\t\t\t\t\t\tconst textureInfo = sheen.getSheenRoughnessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].sheenRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SPECULAR } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Specular extends ExtensionProperty {\n\tpublic readonly propertyType = 'Specular';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_SPECULAR;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\n\tprivate _specularFactor = 1.0;\n\tprivate _specularColorFactor: vec3 = [1.0, 1.0, 1.0];\n\n\t@GraphChild private specularTexture: Link<this, Texture> = null;\n\t@GraphChild private specularTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('specularTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._specularFactor = other._specularFactor;\n\n\t\tif (other.specularTexture) {\n\t\t\tthis.setSpecularTexture(resolve(other.specularTexture.getChild()));\n\t\t\tthis.getSpecularTextureInfo().copy(resolve(other.specularTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.specularTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Specular.\n\t */\n\n\t/** Specular; linear multiplier. See {@link getSpecularTexture}. */\n\tpublic getSpecularFactor(): number { return this._specularFactor; }\n\n\t/** Specular; linear multiplier. See {@link getSpecularTexture}. */\n\tpublic setSpecularFactor(specularFactor: number): this {\n\t\tthis._specularFactor = specularFactor;\n\t\treturn this;\n\t}\n\n\t/** Specular color; components in linear space. See {@link getSpecularTexture}. */\n\tpublic getSpecularColorFactor(): vec3 { return this._specularColorFactor; }\n\n\t/** Specular color; components in linear space. See {@link getSpecularTexture}. */\n\tpublic setSpecularColorFactor(specularColorFactor: vec3): this {\n\t\tthis._specularColorFactor = specularColorFactor;\n\t\treturn this;\n\t}\n\n\t/** Specular color; hexadecimal in sRGB colorspace. See {@link getSpecularTexture} */\n\tpublic getSpecularColorHex(): number {\n\t\treturn ColorUtils.factorToHex(this._specularColorFactor);\n\t}\n\n\t/** Specular color; hexadecimal in sRGB colorspace. See {@link getSpecularTexture} */\n\tpublic setSpecularColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._specularColorFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Specular texture; linear multiplier. Configures the strength of the specular reflection in\n\t * the dielectric BRDF. A value of zero disables the specular reflection, resulting in a pure\n\t * diffuse material.\n\t *\n\t * A 4-channel texture that defines the F0 color of the specular reflection (RGB channels,\n\t * encoded in sRGB) and the specular factor (A). Will be multiplied by specularFactor and\n\t * specularColorFactor.\n\t */\n\tpublic getSpecularTexture(): Texture {\n\t\treturn this.specularTexture ? this.specularTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its specular texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSpecularTextureInfo(): TextureInfo {\n\t\treturn this.specularTexture ? this.specularTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets specular texture. See {@link getSpecularTexture}. */\n\tpublic setSpecularTexture(texture: Texture): this {\n\t\tthis.specularTexture = this.graph.link('specularTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SPECULAR } from '../constants';\nimport { Specular } from './specular';\n\nconst NAME = KHR_MATERIALS_SPECULAR;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsSpecular extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createSpecular(): Specular {\n\t\treturn new Specular(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst specular = this.createSpecular();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, specular);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].specularFactor !== undefined) {\n\t\t\t\t\tspecular.setSpecularFactor(materialDef.extensions[NAME].specularFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularColorFactor !== undefined) {\n\t\t\t\t\tspecular.setSpecularColorFactor(materialDef.extensions[NAME].specularColorFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].specularTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].specularTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecular.setSpecularTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specular.getSpecularTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst specular = material.getExtension<Specular>(NAME);\n\t\t\t\tif (specular) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tspecularFactor: specular.getSpecularFactor(),\n\t\t\t\t\t\tspecularColorFactor: specular.getSpecularColorFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (specular.getSpecularTexture()) {\n\t\t\t\t\t\tconst texture = specular.getSpecularTexture();\n\t\t\t\t\t\tconst textureInfo = specular.getSpecularTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].specularTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo } from '@gltf-transform/core';\nimport { KHR_MATERIALS_TRANSMISSION } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Transmission extends ExtensionProperty {\n\tpublic readonly propertyType = 'Transmission';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_TRANSMISSION;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n\tprivate _transmissionFactor = 0.0;\n\n\t@GraphChild private transmissionTexture: Link<this, Texture> = null;\n\t@GraphChild private transmissionTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('transmissionTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._transmissionFactor = other._transmissionFactor;\n\n\t\tif (other.transmissionTexture) {\n\t\t\tthis.setTransmissionTexture(resolve(other.transmissionTexture.getChild()));\n\t\t\tthis.getTransmissionTextureInfo().copy(resolve(other.transmissionTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.transmissionTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Transmission.\n\t */\n\n\t/** Transmission; linear multiplier. See {@link getTransmissionTexture}. */\n\tpublic getTransmissionFactor(): number { return this._transmissionFactor; }\n\n\t/** Transmission; linear multiplier. See {@link getTransmissionTexture}. */\n\tpublic setTransmissionFactor(transmissionFactor: number): this {\n\t\tthis._transmissionFactor = transmissionFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transmission texture; linear multiplier. The `r` channel of this texture specifies\n\t * transmission [0-1] of the material's surface. By default this is a thin transparency\n\t * effect, but volume effects (refraction, subsurface scattering) may be introduced with the\n\t * addition of the `KHR_materials_volume` extension.\n\t */\n\tpublic getTransmissionTexture(): Texture {\n\t\treturn this.transmissionTexture ? this.transmissionTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its transmission texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getTransmissionTextureInfo(): TextureInfo {\n\t\treturn this.transmissionTexture ? this.transmissionTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets transmission texture. See {@link getTransmissionTexture}. */\n\tpublic setTransmissionTexture(texture: Texture): this {\n\t\tthis.transmissionTexture = this.graph.link('transmissionTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_TRANSMISSION } from '../constants';\nimport { Transmission } from './transmission';\n\nconst NAME = KHR_MATERIALS_TRANSMISSION;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsTransmission extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createTransmission(): Transmission {\n\t\treturn new Transmission(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst transmission = this.createTransmission();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, transmission);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].transmissionFactor !== undefined) {\n\t\t\t\t\ttransmission.setTransmissionFactor(materialDef.extensions[NAME].transmissionFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].transmissionTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].transmissionTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\ttransmission.setTransmissionTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(transmission.getTransmissionTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst transmission = material.getExtension<Transmission>(NAME);\n\t\t\t\tif (transmission) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\ttransmissionFactor: transmission.getTransmissionFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (transmission.getTransmissionTexture()) {\n\t\t\t\t\t\tconst texture = transmission.getTransmissionTexture();\n\t\t\t\t\t\tconst textureInfo = transmission.getTransmissionTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].transmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { ExtensionProperty } from '@gltf-transform/core';\nimport { PropertyType } from '@gltf-transform/core';\nimport { KHR_MATERIALS_UNLIT } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Unlit extends ExtensionProperty {\n\tpublic readonly propertyType = 'Unlit';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_UNLIT;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_UNLIT } from '../constants';\nimport { Unlit } from './unlit';\n\nconst NAME = KHR_MATERIALS_UNLIT;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsUnlit extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createUnlit(): Unlit {\n\t\treturn new Unlit(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst materialDefs = context.jsonDoc.json.materials || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, this.createUnlit());\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tif (material.getExtension<Unlit>(NAME)) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\t\t\t\tmaterialDef.extensions[NAME] = {};\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MESH_QUANTIZATION } from '../constants';\n\nconst NAME = KHR_MESH_QUANTIZATION;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MeshQuantization extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tread(_: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\twrite(_: WriterContext): this {\n\t\treturn this;\n\t}\n}\n","import { Extension, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_TEXTURE_BASISU } from '../constants';\n\nconst NAME = KHR_TEXTURE_BASISU;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureBasisu extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.TEXTURE];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic provide(context: ReaderContext): this {\n\t\tcontext.jsonDoc.json.textures.forEach((textureDef) => {\n\t\t\tif (textureDef.extensions && textureDef.extensions[NAME]) {\n\t\t\t\ttextureDef.source = textureDef.extensions[NAME].source;\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listTextures()\n\t\t\t.forEach((texture) => {\n\t\t\t\tif (texture.getMimeType() === 'image/ktx2') {\n\t\t\t\t\tconst imageIndex = context.imageIndexMap.get(texture);\n\t\t\t\t\tjsonDoc.json.textures.forEach((textureDef) => {\n\t\t\t\t\t\tif (textureDef.source === imageIndex) {\n\t\t\t\t\t\t\ttextureDef.extensions = textureDef.extensions || {}\n\t\t\t\t\t\t\ttextureDef.extensions[NAME] = {source: textureDef.source};\n\t\t\t\t\t\t\tdelete textureDef.source;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, vec2 } from '@gltf-transform/core';\nimport { PropertyType } from '@gltf-transform/core';\nimport { KHR_TEXTURE_TRANSFORM } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Transform extends ExtensionProperty {\n\tpublic readonly propertyType = 'Transform';\n\tpublic readonly parentTypes = [PropertyType.TEXTURE_INFO];\n\tpublic readonly extensionName = KHR_TEXTURE_TRANSFORM;\n\tpublic static EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\n\tprivate _offset: vec2 = [0, 0];\n\tprivate _rotation = 0;\n\tprivate _scale: vec2 = [1, 1];\n\tprivate _texCoord: number = undefined;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._offset = other._offset;\n\t\tthis._rotation = other._rotation;\n\t\tthis._scale = other._scale;\n\t\tthis._texCoord = other._texCoord;\n\n\t\treturn this;\n\t}\n\n\tpublic getOffset(): vec2 { return this._offset; }\n\tpublic setOffset(offset: vec2): this {\n\t\tthis._offset = offset;\n\t\treturn this;\n\t}\n\n\tpublic getRotation(): number { return this._rotation; }\n\tpublic setRotation(rotation: number): this {\n\t\tthis._rotation = rotation;\n\t\treturn this;\n\t}\n\n\tpublic getScale(): vec2 { return this._scale; }\n\tpublic setScale(scale: vec2): this {\n\t\tthis._scale = scale;\n\t\treturn this;\n\t}\n\n\tpublic getTexCoord(): number { return this._texCoord; }\n\tpublic setTexCoord(texCoord: number): this {\n\t\tthis._texCoord = texCoord;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_TEXTURE_TRANSFORM } from '../constants';\nimport { Transform } from './transform';\n\nconst NAME = KHR_TEXTURE_TRANSFORM;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureTransform extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createTransform(): Transform {\n\t\treturn new Transform(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tfor (const [textureInfo, textureInfoDef] of Array.from(context.textureInfos.entries())) {\n\t\t\tif (!textureInfoDef.extensions || !textureInfoDef.extensions[NAME]) continue;\n\n\t\t\tconst transform = this.createTransform();\n\t\t\tconst transformDef = textureInfoDef.extensions[NAME];\n\n\t\t\tif (transformDef.offset !== undefined) transform.setOffset(transformDef.offset);\n\t\t\tif (transformDef.rotation !== undefined) transform.setRotation(transformDef.rotation);\n\t\t\tif (transformDef.scale !== undefined) transform.setScale(transformDef.scale);\n\t\t\tif (transformDef.texCoord !== undefined) transform.setTexCoord(transformDef.texCoord);\n\n\t\t\ttextureInfo.setExtension(NAME, transform);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst textureInfoEntries = Array.from(context.textureInfoDefMap.entries());\n\t\tfor (const [textureInfo, textureInfoDef] of textureInfoEntries) {\n\t\t\tconst transform = textureInfo.getExtension<Transform>(NAME);\n\t\t\tif (!transform) continue;\n\n\t\t\ttextureInfoDef.extensions = textureInfoDef.extensions || {};\n\t\t\ttextureInfoDef.extensions[NAME] = {\n\t\t\t\toffset: transform.getOffset(),\n\t\t\t\trotation: transform.getRotation(),\n\t\t\t\tscale: transform.getScale(),\n\t\t\t\ttexCoord: transform.getTexCoord(),\n\t\t\t};\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { TextureWebP } from './ext-texture-webp';\nimport { DracoMeshCompression } from './khr-draco-mesh-compression';\nimport { LightsPunctual } from './khr-lights-punctual';\nimport { MaterialsClearcoat } from './khr-materials-clearcoat';\nimport { MaterialsIOR } from './khr-materials-ior';\nimport { MaterialsPBRSpecularGlossiness } from './khr-materials-pbr-specular-glossiness';\nimport { MaterialsSheen } from './khr-materials-sheen';\nimport { MaterialsSpecular } from './khr-materials-specular';\nimport { MaterialsTransmission } from './khr-materials-transmission';\nimport { MaterialsUnlit } from './khr-materials-unlit';\nimport { MeshQuantization } from './khr-mesh-quantization';\nimport { TextureBasisu } from './khr-texture-basisu';\nimport { TextureTransform } from './khr-texture-transform';\n\nexport const KHRONOS_EXTENSIONS = [\n\tDracoMeshCompression,\n\tLightsPunctual,\n\tMaterialsClearcoat,\n\tMaterialsIOR,\n\tMaterialsPBRSpecularGlossiness,\n\tMaterialsSpecular,\n\tMaterialsSheen,\n\tMaterialsTransmission,\n\tMaterialsUnlit,\n\tMeshQuantization,\n\tTextureBasisu,\n\tTextureTransform,\n];\n\nexport const ALL_EXTENSIONS = [\n\tTextureWebP,\n\t...KHRONOS_EXTENSIONS,\n];\n\nexport * from './ext-texture-webp';\nexport * from './khr-draco-mesh-compression';\nexport * from './khr-lights-punctual';\nexport * from './khr-materials-clearcoat';\nexport * from './khr-materials-ior';\nexport * from './khr-materials-sheen';\nexport * from './khr-materials-specular';\nexport * from './khr-materials-pbr-specular-glossiness';\nexport * from './khr-materials-transmission';\nexport * from './khr-materials-unlit';\nexport * from './khr-mesh-quantization';\nexport * from './khr-texture-basisu';\nexport * from './khr-texture-transform';\n"],"names":["decoderModule","COMPONENT_ARRAY","DATA_TYPE","NAME","TextureWebP","_this","PropertyType","TEXTURE","provide","context","jsonDoc","json","textures","forEach","textureDef","extensions","source","read","write","this","doc","getRoot","listTextures","texture","getMimeType","imageIndex","imageIndexMap","get","Extension","decodeGeometry","decoder","arrayBuffer","buffer","DecoderBuffer","Init","Int8Array","byteLength","GetEncodedGeometryType","TRIANGULAR_MESH","Error","dracoMesh","Mesh","DecodeBufferToMesh","ok","ptr","destroy","decodeIndex","mesh","numIndices","num_faces","Uint32Array","BYTES_PER_ELEMENT","_malloc","GetTrianglesUInt32Array","indices","HEAP32","slice","_free","decodeAttribute","attribute","accessorDef","dataType","componentType","ArrayCtor","numComponents","num_components","numValues","num_points","GetAttributeDataArrayForAllPoints","array","HEAPF32","LightType","DracoMeshCompression","PRIMITIVE","install","key","dependency","_decoderModule","Float32Array","Uint16Array","Uint8Array","Int16Array","DT_FLOAT32","DT_UINT32","DT_UINT16","DT_UINT8","DT_INT16","DT_INT8","logger","getLogger","Decoder","dracoMeshes","Map","meshes","primitives","primDef","dracoDef","bufferView","bufferViewDef","bufferViews","bufferDef","buffers","compressedData","uri","resources","GLB_BUFFER","byteOffset","set","debug","semantic","attributes","accessors","dracoAttribute","GetAttributeByUniqueId","attributeArray","setArray","indicesArray","Array","from","values","dispose","warn","extensionName","Light","NODE","undefined","Math","PI","copy","other","resolve","COPY_IDENTITY","_ExtensionProperty","_color","_intensity","_type","_range","_innerConeAngle","_outerConeAngle","getColor","setColor","color","getColorHex","ColorUtils","factorToHex","setColorHex","hex","hexToFactor","getIntensity","setIntensity","intensity","getType","setType","type","getRange","setRange","range","getInnerConeAngle","setInnerConeAngle","innerConeAngle","getOuterConeAngle","setOuterConeAngle","outerConeAngle","ExtensionProperty","LightsPunctual","createLight","getGraph","lights","map","lightDef","light","_this2","setName","name","nodes","nodeDef","nodeIndex","setExtension","properties","size","lightDefs","lightIndexMap","getName","SPOT","push","length","listNodes","node","getExtension","nodeIndexMap","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Clearcoat","MATERIAL","graph","link","TextureInfo","_clearcoatFactor","_clearcoatRoughnessFactor","_clearcoatNormalScale","clearcoatTexture","setClearcoatTexture","getChild","getClearcoatTextureInfo","clearcoatTextureInfo","clearcoatRoughnessTexture","setClearcoatRoughnessTexture","getClearcoatRoughnessTextureInfo","clearcoatRoughnessTextureInfo","clearcoatNormalTexture","setClearcoatNormalTexture","getClearcoatNormalTextureInfo","clearcoatNormalTextureInfo","getClearcoatFactor","setClearcoatFactor","clearcoatFactor","getClearcoatTexture","getClearcoatRoughnessFactor","setClearcoatRoughnessFactor","clearcoatRoughnessFactor","getClearcoatRoughnessTexture","getClearcoatNormalScale","setClearcoatNormalScale","clearcoatNormalScale","getClearcoatNormalTexture","GraphChild","MaterialsClearcoat","createClearcoat","textureDefs","materials","materialDef","materialIndex","clearcoat","textureInfoDef","index","setTextureInfo","scale","listMaterials","material","materialIndexMap","textureInfo","createTextureInfoDef","IOR","_ior","getIOR","setIOR","ior","MaterialsIOR","createIOR","PBRSpecularGlossiness","_diffuseFactor","_specularFactor","_glossinessFactor","diffuseTexture","setDiffuseTexture","getDiffuseTextureInfo","diffuseTextureInfo","specularGlossinessTexture","setSpecularGlossinessTexture","getSpecularGlossinessTextureInfo","specularGlossinessTextureInfo","getDiffuseFactor","setDiffuseFactor","diffuseFactor","getDiffuseHex","setDiffuseHex","getDiffuseTexture","getSpecularFactor","setSpecularFactor","specularFactor","getGlossinessFactor","setGlossinessFactor","glossinessFactor","getSpecularGlossinessTexture","MaterialsPBRSpecularGlossiness","createPBRSpecularGlossiness","specGloss","Sheen","_sheenColorFactor","_sheenRoughnessFactor","sheenColorTexture","setSheenColorTexture","getSheenColorTextureInfo","sheenColorTextureInfo","sheenRoughnessTexture","setSheenRoughnessTexture","getSheenRoughnessTextureInfo","sheenRoughnessTextureInfo","getSheenColorFactor","getSheenColorHex","setSheenColorFactor","sheenColorFactor","setSheenColorHex","getSheenColorTexture","getSheenRoughnessFactor","setSheenRoughnessFactor","sheenRoughnessFactor","getSheenRoughnessTexture","MaterialsSheen","createSheen","sheen","Specular","specularTexture","setSpecularTexture","getSpecularTextureInfo","specularTextureInfo","getSpecularColorFactor","_specularColorFactor","setSpecularColorFactor","specularColorFactor","getSpecularColorHex","setSpecularColorHex","getSpecularTexture","MaterialsSpecular","createSpecular","specular","Transmission","_transmissionFactor","transmissionTexture","setTransmissionTexture","getTransmissionTextureInfo","transmissionTextureInfo","getTransmissionFactor","setTransmissionFactor","transmissionFactor","getTransmissionTexture","MaterialsTransmission","createTransmission","transmission","Unlit","MaterialsUnlit","createUnlit","MeshQuantization","_","TextureBasisu","Transform","TEXTURE_INFO","_offset","_rotation","_scale","_texCoord","getOffset","setOffset","offset","getRotation","setRotation","rotation","getScale","setScale","getTexCoord","setTexCoord","texCoord","TextureTransform","createTransform","textureInfos","entries","transform","transformDef","textureInfoDefMap","KHRONOS_EXTENSIONS","ALL_EXTENSIONS"],"mappings":"ghCAEWA,EAGPC,EACAC,ECHEC,ECH0B,mBDMnBC,cAAb,yEACiCD,EAChBE,eAAe,CAACC,eAAaC,kBAF9C,2BAKQC,QAAA,SAAQC,GAMd,OALAA,EAAQC,QAAQC,KAAKC,SAASC,QAAQ,SAACC,GAClCA,EAAWC,YAAcD,EAAWC,WAAWZ,KAClDW,EAAWE,OAASF,EAAWC,WAAWZ,GAAMa,kBAO5CC,KAAA,SAAKR,GACX,eAGMS,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAiBxB,OAfAS,KAAKC,IAAIC,UACPC,eACAT,QAAQ,SAACU,GACT,GAA8B,eAA1BA,EAAQC,cAAgC,CAC3C,IAAMC,EAAahB,EAAQiB,cAAcC,IAAIJ,GAC7Cb,EAAQC,KAAKC,SAASC,QAAQ,SAACC,GAC1BA,EAAWE,SAAWS,IACzBX,EAAWC,WAAaD,EAAWC,YAAc,GACjDD,EAAWC,WAAWZ,GAAQ,CAACa,OAAQF,EAAWE,eAC3CF,EAAWE,sBA/BQY,sBDEjBC,EAAeC,EAAwBC,GACtD,IAAIC,EACJ,IAKC,IAJAA,EAAS,IAAIhC,EAAciC,eACpBC,KAAK,IAAIC,UAAUJ,GAAcA,EAAYK,YAC/BN,EAAQO,uBAAuBL,KAE/BhC,EAAcsC,gBAClC,UAAUC,MAAM,0BAGjB,IAAMC,EAAY,IAAIxC,EAAcyC,KAGpC,IAFeX,EAAQY,mBAAmBV,EAAQQ,GAEtCG,MAA0B,IAAlBH,EAAUI,IAC7B,UAAUL,MAAM,qBAGjB,OAAOC,EAhBR,QAkBCxC,EAAc6C,QAAQb,aAIRc,EAAYhB,EAAwBiB,GACnD,IACMC,EAAwB,EADbD,EAAKE,YAEhBb,EAAaY,EAAaE,YAAYC,kBAEtCP,EAAM5C,EAAcoD,QAAQhB,GAClCN,EAAQuB,wBAAwBN,EAAMX,EAAYQ,GAClD,IAAMU,EAAU,IAAIJ,YAAYlD,EAAcuD,OAAOvB,OAAQY,EAAKI,GAAYQ,QAG9E,OAFAxD,EAAcyD,MAAMb,GAEbU,WAGQI,EACd5B,EACAiB,EACAY,EACAC,GAED,IAAMC,EAAW3D,EAAU0D,EAAYE,eACjCC,EAAY9D,EAAgB2D,EAAYE,eACxCE,EAAgBL,EAAUM,iBAE1BC,EADYnB,EAAKoB,aACOH,EACxB5B,EAAqB8B,EAAYH,EAAUZ,kBAE3CP,EAAM5C,EAAcoD,QAAQhB,GAClCN,EAAQsC,kCAAkCrB,EAAMY,EAAWE,EAAUzB,EAAYQ,GACjF,IAAMyB,EAAoB,IAAIN,EAAU/D,EAAcsE,QAAQtC,OAAQY,EAAKsB,GAAWV,QAGtF,OAFAxD,EAAcyD,MAAMb,GAEbyB,ECtDgBjE,iBAAiBD,EELzC,ICAYoE,EDANpE,EDHoC,6BCa7BqE,cAAb,yEACiCrE,EAChBE,eAAe,CAACC,eAAamE,WAC7BpE,eAAe,CAAC,4BAHjC,2BAQQqE,QAAA,SAAQC,EAAaC,GH4C7B,QGvCE,MAJY,oBAARD,IACHxD,KAAK0D,eAAiBD,EH2CxB5E,EG1CoBmB,KAAK0D,4BH6CYC,qBACO5B,oBACE6B,oBACDC,mBACRC,mBACD9C,UANpClC,iBAUqCD,EAAckF,mBACPlF,EAAcmF,kBACZnF,EAAcoF,kBACfpF,EAAcqF,iBACtBrF,EAAcsF,iBACftF,EAAcuF,QANlDrF,aGhDOM,QAAA,SAAQC,GACd,IAAKU,KAAK0D,eACT,UAAUtC,MAAM,2DAQjB,IALA,MAAMiD,EAASrE,KAAKC,IAAIqE,YAClB/E,EAAUD,EAAQC,QAClBoB,EAAU,SAAS+C,eAAea,QAClCC,EAAuC,IAAIC,QAE3BlF,EAAQC,KAAKkF,uBAAQ,CAC1C,sBAA8BC,2BAAY,KAA/BC,UACV,GAAKA,EAAQhF,YAAegF,EAAQhF,WAAWZ,GAA/C,CAEA,IAAM6F,EAAWD,EAAQhF,WAAWZ,GAChCqC,EAAYmD,EAAYhE,IAAIqE,EAASC,YAEzC,IAAKzD,EAAW,CACf,IAAM0D,EAAgBxF,EAAQC,KAAKwF,YAAYH,EAASC,YAClDG,EAAY1F,EAAQC,KAAK0F,QAAQH,EAAclE,QAO/CsE,EAAiB,IAAItB,WANVoB,EAAUG,IACxB7F,EAAQ8F,UAAUJ,EAAUG,KAC5B7F,EAAQ8F,UAAUC,cAEFP,EAAcQ,YAAc,EAC5BR,EAAc9D,YAGjCI,EAAYX,EAAeC,EAASwE,GACpCX,EAAYgB,IAAIX,EAASC,WAAYzD,GACrCgD,EAAOoB,sBAAsBN,EAAelE,sBAI7C,IAAK,IAAMyE,KAAYd,EAAQe,WAAY,CAC1C,IAAMlD,EAAcnD,EAAQC,QAAQC,KAAKoG,UAAUhB,EAAQe,WAAWD,IAChEG,EAAiBlF,EAAQmF,uBAAuBzE,EAAWwD,EAASc,WAAWD,IAC/EK,EAAiBxD,EAAgB5B,EAASU,EAAWwE,EAAgBpD,GAC3EnD,EAAQsG,UAAUhB,EAAQe,WAAWD,IAAWM,SAASD,GAI1D,IAAME,EAAetE,EAAYhB,EAASU,GAC1C/B,EAAQsG,UAAUhB,EAAQzC,SAAS6D,SAASC,IAG7CjG,KAAK0D,eAAehC,QAAQf,GAC5B,cAAwBuF,MAAMC,KAAK3B,EAAY4B,yBAC9CpG,KAAK0D,eAAehC,cAItB,eAIM5B,KAAA,SAAKR,GAEX,OADAU,KAAKqG,kBAKCtG,MAAA,SAAMT,GAEZ,OADAU,KAAKC,IAAIqE,YAAYgC,gBAAgBtG,KAAKuG,gDA/EF9F,aAIlB4C,iBAAiBrE,GCd7BoE,EAAAA,oBAAAA,qCAEXA,cACAA,4BAIYoD,IAAAA,cAAb,wEACgC,QACftH,cAAc,CAACC,eAAasH,MAC5BvH,gBFZkB,sBEe1BA,SAAe,CAAC,EAAG,EAAG,GACtBA,aAAa,EAEbA,cAAiBwH,EAEjBxH,kBAAkB,EAClBA,kBAAkByH,KAAKC,GAAK,WAZrC,2BAcQC,KAAA,SAAKC,EAAaC,GAWxB,gBAXwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAKkH,iBAAaJ,EAAMI,QACxBlH,KAAKmH,WAAaL,EAAMK,WACxBnH,KAAKoH,MAAQN,EAAMM,MACnBpH,KAAKqH,OAASP,EAAMO,OAEpBrH,KAAKsH,gBAAkBR,EAAMQ,gBAC7BtH,KAAKuH,gBAAkBT,EAAMS,wBAUvBC,SAAA,WAAmB,YAAYN,UAG/BO,SAAA,SAASC,GAEf,OADA1H,KAAKkH,OAASQ,UAKRC,YAAA,WAAwB,OAAOC,aAAWC,YAAY7H,KAAKkH,WAG3DY,YAAA,SAAYC,GAElB,OADAH,aAAWI,YAAYD,EAAK/H,KAAKkH,gBAY3Be,aAAA,WAAyB,YAAYd,cAMrCe,aAAA,SAAaC,GAEnB,OADAnI,KAAKmH,WAAagB,UASZC,QAAA,WAAuB,YAAYhB,SAGnCiB,QAAA,SAAQC,GAEd,OADAtI,KAAKoH,MAAQkB,UAaPC,SAAA,WAAqB,YAAYlB,UAOjCmB,SAAA,SAASC,GAEf,OADAzI,KAAKqH,OAASoB,UAYRC,kBAAA,WAA8B,YAAYpB,mBAM1CqB,kBAAA,SAAkBC,GAExB,OADA5I,KAAKsH,gBAAkBsB,UAQjBC,kBAAA,WAA8B,YAAYtB,mBAM1CuB,kBAAA,SAAkBC,GAExB,OADA/I,KAAKuH,gBAAkBwB,WArIEC,qBAIZxC,iBFboB,sBGEnC,IAAMxH,EHF6B,sBGKtBiK,cAAb,yEACiCjK,WADjC,2BAIQkK,YAAA,WACN,WAAW1C,EAAMxG,KAAKC,IAAIkJ,WAAYnJ,SAGhCF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAExB,IAAKA,EAAQC,KAAKI,aAAeL,EAAQC,KAAKI,WAAWZ,GAAO,YAEhE,IACMoK,GADY7J,EAAQC,KAAKI,WAAWZ,GAAMoK,QAAU,IACjCC,IAAI,SAACC,GAC7B,IAAMC,EAAQC,EAAKN,cACjBO,QAAQH,EAASI,MAAQ,IACzBrB,QAAQiB,EAAShB,MAanB,YAXuB5B,IAAnB4C,EAAS5B,OAAqB6B,EAAM9B,SAAS6B,EAAS5B,YAC/BhB,IAAvB4C,EAASnB,WAAyBoB,EAAMrB,aAAaoB,EAASnB,gBAC3CzB,IAAnB4C,EAASb,OAAqBc,EAAMf,SAASc,EAASb,YAE1B/B,IAA5B4C,EAASV,gBACZW,EAAMZ,kBAAkBW,EAASV,qBAEFlC,IAA5B4C,EAASP,gBACZQ,EAAMT,kBAAkBQ,EAASP,gBAG3BQ,IAQR,OALAhK,EAAQC,KAAKmK,MAAMjK,QAAQ,SAACkK,EAASC,GAC/BD,EAAQhK,YAAegK,EAAQhK,WAAWZ,IAC/CM,EAAQqK,MAAME,GAAWC,aAAa9K,EAAMoK,EAAOQ,EAAQhK,WAAWZ,GAAMuK,kBAMvExJ,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAExB,GAA6B,IAAzBS,KAAK+J,WAAWC,KAAY,YAKhC,IAHA,MAAMC,EAAY,GACZC,EAAgB,IAAIzF,QAEHzE,KAAK+J,2BAAY,KACjCR,UACAD,EAAW,CAChBhB,KAAMiB,EAAMnB,UACZV,MAAO6B,EAAM/B,WACbW,UAAWoB,EAAMtB,eACjBQ,MAAOc,EAAMhB,YAGVgB,EAAMY,YAAWb,EAAQ,KAAWC,EAAMY,WAE1CZ,EAAMnB,YAAchF,kBAAUgH,OACjCd,EAAQ,eAAqBC,EAAMb,oBACnCY,EAAQ,eAAqBC,EAAMV,qBAGpCoB,EAAUI,KAAKf,GACfY,EAAc1E,IAAI+D,EAAOU,EAAUK,OAAS,GAkB7C,OAfAtK,KAAKC,IAAIC,UACPqK,YACA7K,QAAQ,SAAC8K,GACT,IAAMjB,EAAQiB,EAAKC,aAAoBzL,GACvC,GAAIuK,EAAO,CACV,IAAMM,EAAYvK,EAAQoL,aAAalK,IAAIgK,GACrCZ,EAAUrK,EAAQC,KAAKmK,MAAME,GACnCD,EAAQhK,WAAagK,EAAQhK,YAAc,GAC3CgK,EAAQhK,WAAWZ,GAAQ,CAACuK,MAAOW,EAAc1J,IAAI+I,OAIxDhK,EAAQC,KAAKI,WAAaL,EAAQC,KAAKI,YAAc,GACrDL,EAAQC,KAAKI,WAAWZ,GAAQ,CAACoK,OAAQa,YAlFPxJ,sBC6CpBkK,EAAWC,EAAYC,EAAQrH,EAAKsH,GAChD,IAA2HC,EAAvHC,EAAIC,UAAUX,OAAQY,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQrH,GAAOsH,EACrH,GAAuB,iBAAZO,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQrH,EAAKsH,YAC/G,IAAIS,EAAIX,EAAWN,OAAS,EAAGiB,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQrH,EAAK0H,GAAKH,EAAEF,EAAQrH,KAAS0H,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQrH,EAAK0H,GAAIA,ED/CxCjC,iBAAiBjK,EEL5ByM,IAAAA,cAAb,wEACgC,YACfvM,cAAc,CAACC,eAAauM,UAC5BxM,gBLJsB,0BKO9BA,mBAAmB,EACnBA,4BAA4B,EAC5BA,wBAAwB,EAEZA,mBAAwC,KACxCA,uBACnBA,EAAKyM,MAAMC,KAAK,4BAA8B,IAAIC,cAAY3M,EAAKyM,QAEhDzM,4BAAiD,KACjDA,gCACnBA,EAAKyM,MAAMC,KAAK,qCAAuC,IAAIC,cAAY3M,EAAKyM,QAEzDzM,yBAA8C,KAC9CA,6BACnBA,EAAKyM,MAAMC,KAAK,kCAAoC,IAAIC,cAAY3M,EAAKyM,iBApB3E,2BAsBQ9E,KAAA,SAAKC,EAAaC,GAoBxB,gBApBwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAK8L,iBAAmBhF,EAAMgF,iBAC9B9L,KAAK+L,0BAA4BjF,EAAMiF,0BACvC/L,KAAKgM,sBAAwBlF,EAAMkF,sBAE/BlF,EAAMmF,mBACTjM,KAAKkM,oBAAoBnF,EAAQD,EAAMmF,iBAAiBE,aACxDnM,KAAKoM,0BAA0BvF,KAAKE,EAAQD,EAAMuF,qBAAqBF,YAAapF,IAEjFD,EAAMwF,4BACTtM,KAAKuM,6BAA6BxF,EAAQD,EAAMwF,0BAA0BH,aAC1EnM,KAAKwM,mCAAmC3F,KAAKE,EAAQD,EAAM2F,8BAA8BN,YAAapF,IAEnGD,EAAM4F,yBACT1M,KAAK2M,0BAA0B5F,EAAQD,EAAM4F,uBAAuBP,aACpEnM,KAAK4M,gCAAgC/F,KAAKE,EAAQD,EAAM+F,2BAA2BV,YAAapF,YAM3FV,QAAA,WACNrG,KAAKqM,qBAAqBF,WAAW9F,UACrCrG,KAAKyM,8BAA8BN,WAAW9F,UAC9CrG,KAAK6M,2BAA2BV,WAAW9F,UAC3CY,YAAMZ,sBAQAyG,mBAAA,WAA+B,YAAYhB,oBAG3CiB,mBAAA,SAAmBC,GAEzB,OADAhN,KAAK8L,iBAAmBkB,UASlBC,oBAAA,WACN,YAAYhB,iBAAmBjM,KAAKiM,iBAAiBE,WAAa,QAO5DC,wBAAA,WACN,YAAYH,iBAAmBjM,KAAKqM,qBAAqBF,WAAa,QAIhED,oBAAA,SAAoB9L,GAE1B,OADAJ,KAAKiM,iBAAmBjM,KAAK2L,MAAMC,KAAK,mBAAoB5L,KAAMI,WAS5D8M,4BAAA,WAAwC,YAAYnB,6BAGpDoB,4BAAA,SAA4BC,GAElC,OADApN,KAAK+L,0BAA4BqB,UAQ3BC,6BAAA,WACN,YAAYf,0BAA4BtM,KAAKsM,0BAA0BH,WAAa,QAO9EK,iCAAA,WACN,YAAYF,0BAA4BtM,KAAKyM,8BAA8BN,WAAa,QAIlFI,6BAAA,SAA6BnM,GAEnC,OADAJ,KAAKsM,0BAA4BtM,KAAK2L,MAAMC,KAAK,4BAA6B5L,KAAMI,WAS9EkN,wBAAA,WAAoC,YAAYtB,yBAGhDuB,wBAAA,SAAwBC,GAE9B,OADAxN,KAAKgM,sBAAwBwB,UAOvBC,0BAAA,WACN,YAAYf,uBAAyB1M,KAAK0M,uBAAuBP,WAAa,QAOxES,8BAAA,WACN,YAAYF,uBAAyB1M,KAAK6M,2BAA2BV,WAAa,QAI5EQ,0BAAA,SAA0BvM,GAEhC,OADAJ,KAAK0M,uBAAyB1M,KAAK2L,MAAMC,KAAK,yBAA0B5L,KAAMI,YAzJjD4I,qBAIhByC,iBLLwB,0BKW1Bd,GAAX+C,qDACW/C,GAAX+C,yDAGW/C,GAAX+C,8DACW/C,GAAX+C,kEAGW/C,GAAX+C,2DACW/C,GAAX+C,+DCnBF,IAAM1O,ENDiC,0BMI1B2O,cAAb,yEACiC3O,WADjC,2BAIQ4O,gBAAA,WACN,WAAWnC,EAAUzL,KAAKC,IAAIkJ,WAAYnJ,SAGpCF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAElBsO,EAActO,EAAQC,KAAKC,UAAY,GAyC7C,OA1CqBF,EAAQC,KAAKsO,WAAa,IAElCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAMiP,EAAYzE,EAAKoE,kBAcvB,GAbAtO,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAMiP,QAICvH,IAAjDqH,EAAYnO,WAAWZ,GAAMgO,iBAChCiB,EAAUlB,mBAAmBgB,EAAYnO,WAAWZ,GAAMgO,sBAEGtG,IAA1DqH,EAAYnO,WAAWZ,GAAMoO,0BAChCa,EAAUd,4BAA4BY,EAAYnO,WAAWZ,GAAMoO,+BAKd1G,IAAlDqH,EAAYnO,WAAWZ,GAAMiN,iBAAgC,CAChE,IAAMiC,EAAiBH,EAAYnO,WAAWZ,GAAMiN,iBAEpDgC,EAAU/B,oBADM5M,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeH,EAAU7B,0BAA2B8B,GAE7D,QAA+DxH,IAA3DqH,EAAYnO,WAAWZ,GAAMsN,0BAAyC,CACzE,IAAM4B,EAAiBH,EAAYnO,WAAWZ,GAAMsN,0BAEpD2B,EAAU1B,6BADMjN,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeH,EAAUzB,mCAAoC0B,GAEtE,QAA4DxH,IAAxDqH,EAAYnO,WAAWZ,GAAM0N,uBAAsC,CACtE,IAAMwB,EAAiBH,EAAYnO,WAAWZ,GAAM0N,uBAEpDuB,EAAUtB,0BADMrN,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeH,EAAUrB,gCAAiCsB,QACrCxH,IAAzBwH,EAAeG,OAClBJ,EAAUV,wBAAwBW,EAAeG,mBAS/CtO,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAyCxB,OAvCAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAMN,EAAYM,EAAS9D,aAAwBzL,GACnD,GAAIiP,EAAW,CACd,IAAMD,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAY3C,GAXAD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9BgO,gBAAiBiB,EAAUnB,qBAC3BM,yBAA0Ba,EAAUf,+BAKjCe,EAAUhB,sBAAuB,CACpC,IAAM7M,EAAU6N,EAAUhB,sBACpBwB,EAAcR,EAAU7B,0BAC9B2B,EAAYnO,WAAWZ,GAAMiN,iBAAmB3M,EAAQoP,qBAAqBtO,EAASqO,GAEvF,GAAIR,EAAUZ,+BAAgC,CAC7C,IAAMjN,EAAU6N,EAAUZ,+BACpBoB,EAAcR,EAAUzB,mCAC9BuB,EAAYnO,WAAWZ,GAAMsN,0BAA4BhN,EAAQoP,qBAAqBtO,EAASqO,GAEhG,GAAIR,EAAUR,4BAA6B,CAC1C,IAAMrN,EAAU6N,EAAUR,4BACpBgB,EAAcR,EAAUrB,gCAC9BmB,EAAYnO,WAAWZ,GAAM0N,uBAAyBpN,EAAQoP,qBAAqBtO,EAASqO,GAChD,IAAxCR,EAAUX,4BACbS,EAAYnO,WAAWZ,GAAM0N,uBAAuB2B,MAAQJ,EAAUX,wCA3FrC7M,aAEhBkN,iBAAiB3O,ECL5B2P,IAAAA,cAAb,wEACgC,MACfzP,cAAc,CAACC,eAAauM,UAC5BxM,gBPHgB,oBOMxBA,OAAO,WANhB,2BAQQ2H,KAAA,SAAKC,EAAaC,GAKxB,gBALwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAK4O,KAAO9H,EAAM8H,aAUZC,OAAA,WAAmB,YAAYD,QAG/BE,OAAA,SAAOC,GAEb,OADA/O,KAAK4O,KAAOG,WAzBW/F,qBAIV2F,iBPJkB,oBQAjC,IAAM3P,ERA2B,oBQGpBgQ,cAAb,yEACiChQ,WADjC,2BAIQiQ,UAAA,WACN,WAAWN,EAAI3O,KAAKC,IAAIkJ,WAAYnJ,SAG9BF,KAAA,SAAKR,cAgBX,OAfgBA,EAAQC,QACKC,KAAKsO,WAAa,IAClCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAM+P,EAAMvF,EAAKyF,YACjB3P,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAM+P,QAIXrI,IAArCqH,EAAYnO,WAAWZ,GAAM+P,KAChCA,EAAID,OAAOf,EAAYnO,WAAWZ,GAAM+P,gBAQrChP,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAmBxB,OAjBAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAMQ,EAAMR,EAAS9D,aAAkBzL,GACvC,GAAI+P,EAAK,CACR,IAAMf,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAC3CD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9B+P,IAAKA,EAAIF,sBA1CmBpO,aAEVuO,iBAAiBhQ,ECL5BkQ,IAAAA,cAAb,wEACgC,wBACfhQ,cAAc,CAACC,eAAauM,UAC5BxM,gBTFoC,sCSK5CA,iBAAuB,CAAC,EAAK,EAAK,EAAK,GACvCA,kBAAwB,CAAC,EAAK,EAAK,GACnCA,oBAAoB,EAERA,iBAAsC,KACtCA,qBACnBA,EAAKyM,MAAMC,KAAK,0BAA4B,IAAIC,cAAY3M,EAAKyM,QAE9CzM,4BAAiD,KACjDA,gCACnBA,EAAKyM,MAAMC,KAAK,qCAAuC,IAAIC,cAAY3M,EAAKyM,iBAhB9E,2BAkBQ9E,KAAA,SAAKC,EAAaC,GAgBxB,gBAhBwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAKmP,eAAiBrI,EAAMqI,eAC5BnP,KAAKoP,gBAAkBtI,EAAMsI,gBAC7BpP,KAAKqP,kBAAoBvI,EAAMuI,kBAE3BvI,EAAMwI,iBACTtP,KAAKuP,kBAAkBxI,EAAQD,EAAMwI,eAAenD,aACpDnM,KAAKwP,wBAAwB3I,KAAKE,EAAQD,EAAM2I,mBAAmBtD,YAAapF,IAE7ED,EAAM4I,4BACT1P,KAAK2P,6BAA6B5I,EAAQD,EAAM4I,0BAA0BvD,aAC1EnM,KAAK4P,mCAAmC/I,KAAKE,EAAQD,EAAM+I,8BAA8B1D,YAAapF,YAMjGV,QAAA,WACNrG,KAAKyP,mBAAmBtD,WAAW9F,UACnCrG,KAAK6P,8BAA8B1D,WAAW9F,UAC9CY,YAAMZ,sBAQAyJ,iBAAA,WAA2B,YAAYX,kBAGvCY,iBAAA,SAAiBC,GAEvB,OADAhQ,KAAKmP,eAAiBa,UAKhBC,cAAA,WAA0B,OAAOrI,aAAWC,YAAY7H,KAAKmP,mBAG7De,cAAA,SAAcnI,GAEpB,OADAH,aAAWI,YAAYD,EAAK/H,KAAKmP,wBAQ3BgB,kBAAA,WACN,YAAYb,eAAiBtP,KAAKsP,eAAenD,WAAa,QAOxDqD,sBAAA,WACN,YAAYF,eAAiBtP,KAAKyP,mBAAmBtD,WAAa,QAI5DoD,kBAAA,SAAkBnP,GAExB,OADAJ,KAAKsP,eAAiBtP,KAAK2L,MAAMC,KAAK,iBAAkB5L,KAAMI,WASxDgQ,kBAAA,WAA4B,YAAYhB,mBAGxCiB,kBAAA,SAAkBC,GAExB,OADAtQ,KAAKoP,gBAAkBkB,UASjBC,oBAAA,WAAgC,YAAYlB,qBAG5CmB,oBAAA,SAAoBC,GAE1B,OADAzQ,KAAKqP,kBAAoBoB,UASnBC,6BAAA,WACN,YAAYhB,0BAA4B1P,KAAK0P,0BAA0BvD,WAAa,QAO9EyD,iCAAA,WACN,YAAYF,0BAA4B1P,KAAK6P,8BAA8B1D,WAAa,QAIlFwD,6BAAA,SAA6BvP,GAEnC,OADAJ,KAAK0P,0BAA4B1P,KAAK2L,MAAMC,KAAK,4BAA6B5L,KAAMI,YApI3C4I,qBAI5BkG,iBTHsC,sCSSxCvE,GAAX+C,mDACW/C,GAAX+C,uDAGW/C,GAAX+C,8DACW/C,GAAX+C,kECfF,IAAM1O,EVC+C,sCUExC2R,cAAb,yEACiC3R,WADjC,2BAIQ4R,4BAAA,WACN,WAAW1B,EAAsBlP,KAAKC,IAAIkJ,WAAYnJ,SAGhDF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAElBsO,EAActO,EAAQC,KAAKC,UAAY,GAmC7C,OApCqBF,EAAQC,KAAKsO,WAAa,IAElCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAM6R,EAAYrH,EAAKoH,8BAiBvB,GAhBAtR,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAM6R,QAIDnK,IAA/CqH,EAAYnO,WAAWZ,GAAMgR,eAChCa,EAAUd,iBAAiBhC,EAAYnO,WAAWZ,GAAMgR,oBAELtJ,IAAhDqH,EAAYnO,WAAWZ,GAAMsR,gBAChCO,EAAUR,kBAAkBtC,EAAYnO,WAAWZ,GAAMsR,qBAEJ5J,IAAlDqH,EAAYnO,WAAWZ,GAAMyR,kBAChCI,EAAUL,oBAAoBzC,EAAYnO,WAAWZ,GAAMyR,uBAKR/J,IAAhDqH,EAAYnO,WAAWZ,GAAMsQ,eAA8B,CAC9D,IAAMpB,EAAiBH,EAAYnO,WAAWZ,GAAMsQ,eAEpDuB,EAAUtB,kBADMjQ,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeyC,EAAUrB,wBAAyBtB,GAE3D,QAA+DxH,IAA3DqH,EAAYnO,WAAWZ,GAAM0Q,0BAAyC,CACzE,IAAMxB,EAAiBH,EAAYnO,WAAWZ,GAAM0Q,0BAEpDmB,EAAUlB,6BADMrQ,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeyC,EAAUjB,mCAAoC1B,eAQlEnO,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAkCxB,OAhCAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAMsC,EAAYtC,EAAS9D,aAAoCzL,GAC/D,GAAI6R,EAAW,CACd,IAAM7C,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAa3C,GAZAD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9BgR,cAAea,EAAUf,mBACzBQ,eAAgBO,EAAUT,oBAC1BK,iBAAkBI,EAAUN,uBAKzBM,EAAUV,oBAAqB,CAClC,IAAM/P,EAAUyQ,EAAUV,oBACpB1B,EAAcoC,EAAUrB,wBAC9BzB,EAAYnO,WAAWZ,GAAMsQ,eAAiBhQ,EAAQoP,qBAAqBtO,EAASqO,GAErF,GAAIoC,EAAUH,+BAAgC,CAC7C,IAAMtQ,EAAUyQ,EAAUH,+BACpBjC,EAAcoC,EAAUjB,mCAC9B7B,EAAYnO,WAAWZ,GAAM0Q,0BAA4BpQ,EAAQoP,qBAAqBtO,EAASqO,gBA/EjDhO,aAE5BkQ,iBAAiB3R,ECL5B8R,IAAAA,cAAb,wEACgC,QACf5R,cAAc,CAACC,eAAauM,UAC5BxM,gBXDkB,sBWI1BA,oBAA0B,CAAC,EAAK,EAAK,GACrCA,wBAAwB,EAEZA,oBAAyC,KACzCA,wBACnBA,EAAKyM,MAAMC,KAAK,6BAA+B,IAAIC,cAAY3M,EAAKyM,QAEjDzM,wBAA6C,KAC7CA,4BACnBA,EAAKyM,MAAMC,KAAK,iCAAmC,IAAIC,cAAY3M,EAAKyM,iBAf1E,2BAiBQ9E,KAAA,SAAKC,EAAaC,GAexB,gBAfwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAK+Q,kBAAoBjK,EAAMiK,kBAC/B/Q,KAAKgR,sBAAwBlK,EAAMkK,sBAE/BlK,EAAMmK,oBACTjR,KAAKkR,qBAAqBnK,EAAQD,EAAMmK,kBAAkB9E,aAC1DnM,KAAKmR,2BAA2BtK,KAAKE,EAAQD,EAAMsK,sBAAsBjF,YAAapF,IAEnFD,EAAMuK,wBACTrR,KAAKsR,yBAAyBvK,EAAQD,EAAMuK,sBAAsBlF,aAClEnM,KAAKuR,+BAA+B1K,KAAKE,EAAQD,EAAM0K,0BAA0BrF,YAAapF,YAMzFV,QAAA,WACNrG,KAAKoR,sBAAsBjF,WAAW9F,UACtCrG,KAAKwR,0BAA0BrF,WAAW9F,UAC1CY,YAAMZ,sBAQAoL,oBAAA,WAA8B,YAAYV,qBAG1CW,iBAAA,WAA6B,OAAO9J,aAAWC,YAAY7H,KAAK+Q,sBAGhEY,oBAAA,SAAoBC,GAE1B,OADA5R,KAAK+Q,kBAAoBa,UAKnBC,iBAAA,SAAiB9J,GAEvB,OADAH,aAAWI,YAAYD,EAAK/H,KAAK+Q,2BAO3Be,qBAAA,WACN,YAAYb,kBAAoBjR,KAAKiR,kBAAkB9E,WAAa,QAO9DgF,yBAAA,WACN,YAAYF,kBAAoBjR,KAAKoR,sBAAsBjF,WAAa,QAIlE+E,qBAAA,SAAqB9Q,GAE3B,OADAJ,KAAKiR,kBAAoBjR,KAAK2L,MAAMC,KAAK,oBAAqB5L,KAAMI,WAS9D2R,wBAAA,WAAoC,YAAYf,yBAGhDgB,wBAAA,SAAwBC,GAE9B,OADAjS,KAAKgR,sBAAwBiB,UAQvBC,yBAAA,WACN,YAAYb,sBAAwBrR,KAAKqR,sBAAsBlF,WAAa,QAOtEoF,6BAAA,WACN,YAAYF,sBAAwBrR,KAAKwR,0BAA0BrF,WAAa,QAO1EmF,yBAAA,SAAyBlR,GAE/B,OADAJ,KAAKqR,sBAAwBrR,KAAK2L,MAAMC,KAAK,wBAAyB5L,KAAMI,YAtHnD4I,qBAIZ8H,iBXFoB,sBWOtBnG,GAAX+C,sDACW/C,GAAX+C,0DAGW/C,GAAX+C,0DACW/C,GAAX+C,8DCdF,IAAM1O,EZE6B,sBYCtBmT,cAAb,yEACiCnT,WADjC,2BAIQoT,YAAA,WACN,WAAWtB,EAAM9Q,KAAKC,IAAIkJ,WAAYnJ,SAGhCF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAElBsO,EAActO,EAAQC,KAAKC,UAAY,GAgC7C,OAjCqBF,EAAQC,KAAKsO,WAAa,IAElCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAMqT,EAAQ7I,EAAK4I,cAcnB,GAbA9S,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAMqT,QAIE3L,IAAlDqH,EAAYnO,WAAWZ,GAAM4S,kBAChCS,EAAMV,oBAAoB5D,EAAYnO,WAAWZ,GAAM4S,uBAEElL,IAAtDqH,EAAYnO,WAAWZ,GAAMiT,sBAChCI,EAAML,wBAAwBjE,EAAYnO,WAAWZ,GAAMiT,2BAKLvL,IAAnDqH,EAAYnO,WAAWZ,GAAMiS,kBAAiC,CACjE,IAAM/C,EAAiBH,EAAYnO,WAAWZ,GAAMiS,kBAEpDoB,EAAMnB,qBADU5R,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeiE,EAAMlB,2BAA4BjD,GAE1D,QAA2DxH,IAAvDqH,EAAYnO,WAAWZ,GAAMqS,sBAAqC,CACrE,IAAMnD,EAAiBH,EAAYnO,WAAWZ,GAAMqS,sBAEpDgB,EAAMf,yBADUhS,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAeiE,EAAMd,+BAAgCrD,eAQ1DnO,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAiCxB,OA/BAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAM8D,EAAQ9D,EAAS9D,aAAoBzL,GAC3C,GAAIqT,EAAO,CACV,IAAMrE,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAY3C,GAXAD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9B4S,iBAAkBS,EAAMZ,sBACxBQ,qBAAsBI,EAAMN,2BAKzBM,EAAMP,uBAAwB,CACjC,IAAM1R,EAAUiS,EAAMP,uBAChBrD,EAAc4D,EAAMlB,2BAC1BpD,EAAYnO,WAAWZ,GAAMiS,kBAAoB3R,EAAQoP,qBAAqBtO,EAASqO,GAExF,GAAI4D,EAAMH,2BAA4B,CACrC,IAAM9R,EAAUiS,EAAMH,2BAChBzD,EAAc4D,EAAMd,+BAC1BxD,EAAYnO,WAAWZ,GAAMqS,sBAAwB/R,EAAQoP,qBAAqBtO,EAASqO,gBA3E7DhO,aAEZ0R,iBAAiBnT,MCL5BsT,cAAb,wEACgC,WACfpT,cAAc,CAACC,eAAauM,UAC5BxM,gBbAqB,yBaG7BA,kBAAkB,EAClBA,uBAA6B,CAAC,EAAK,EAAK,GAE5BA,kBAAuC,KACvCA,sBACnBA,EAAKyM,MAAMC,KAAK,2BAA6B,IAAIC,cAAY3M,EAAKyM,iBAXpE,2BAaQ9E,KAAA,SAAKC,EAAaC,GAUxB,gBAVwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAKoP,gBAAkBtI,EAAMsI,gBAEzBtI,EAAMyL,kBACTvS,KAAKwS,mBAAmBzL,EAAQD,EAAMyL,gBAAgBpG,aACtDnM,KAAKyS,yBAAyB5L,KAAKE,EAAQD,EAAM4L,oBAAoBvG,YAAapF,YAM7EV,QAAA,WACNrG,KAAK0S,oBAAoBvG,WAAW9F,UACpCY,YAAMZ,sBAQA+J,kBAAA,WAA8B,YAAYhB,mBAG1CiB,kBAAA,SAAkBC,GAExB,OADAtQ,KAAKoP,gBAAkBkB,UAKjBqC,uBAAA,WAAiC,YAAYC,wBAG7CC,uBAAA,SAAuBC,GAE7B,OADA9S,KAAK4S,qBAAuBE,UAKtBC,oBAAA,WACN,OAAOnL,aAAWC,YAAY7H,KAAK4S,yBAI7BI,oBAAA,SAAoBjL,GAE1B,OADAH,aAAWI,YAAYD,EAAK/H,KAAK4S,8BAa3BK,mBAAA,WACN,YAAYV,gBAAkBvS,KAAKuS,gBAAgBpG,WAAa,QAO1DsG,uBAAA,WACN,YAAYF,gBAAkBvS,KAAK0S,oBAAoBvG,WAAa,QAI9DqG,mBAAA,SAAmBpS,GAEzB,OADAJ,KAAKuS,gBAAkBvS,KAAK2L,MAAMC,KAAK,kBAAmB5L,KAAMI,YAvFpC4I,qBAIfsJ,iBbDuB,yBaMzB3H,GAAX+C,oDACW/C,GAAX+C,4DCVI1O,EdGgC,yBcAzBkU,cAAb,yEACiClU,WADjC,2BAIQmU,eAAA,WACN,WAAWb,EAAStS,KAAKC,IAAIkJ,WAAYnJ,SAGnCF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAElBsO,EAActO,EAAQC,KAAKC,UAAY,GA0B7C,OA3BqBF,EAAQC,KAAKsO,WAAa,IAElCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAMoU,EAAW5J,EAAK2J,iBActB,GAbA7T,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAMoU,QAIA1M,IAAhDqH,EAAYnO,WAAWZ,GAAMsR,gBAChC8C,EAAS/C,kBAAkBtC,EAAYnO,WAAWZ,GAAMsR,qBAEA5J,IAArDqH,EAAYnO,WAAWZ,GAAM8T,qBAChCM,EAASP,uBAAuB9E,EAAYnO,WAAWZ,GAAM8T,0BAKTpM,IAAjDqH,EAAYnO,WAAWZ,GAAMuT,gBAA+B,CAC/D,IAAMrE,EAAiBH,EAAYnO,WAAWZ,GAAMuT,gBAEpDa,EAASZ,mBADOlT,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAegF,EAASX,yBAA0BvE,eAQvDnO,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QA4BxB,OA1BAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAM6E,EAAW7E,EAAS9D,aAAuBzL,GACjD,GAAIoU,EAAU,CACb,IAAMpF,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAY3C,GAXAD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9BsR,eAAgB8C,EAAShD,oBACzB0C,oBAAqBM,EAAST,0BAK3BS,EAASH,qBAAsB,CAClC,IAAM7S,EAAUgT,EAASH,qBACnBxE,EAAc2E,EAASX,yBAC7B1E,EAAYnO,WAAWZ,GAAMuT,gBAAkBjT,EAAQoP,qBAAqBtO,EAASqO,gBAhEpDhO,aAEfyS,iBAAiBlU,ECL5BqU,IAAAA,cAAb,wEACgC,eACfnU,cAAc,CAACC,eAAauM,UAC5BxM,gBfCyB,6BeEjCA,sBAAsB,EAEVA,sBAA2C,KAC3CA,0BACnBA,EAAKyM,MAAMC,KAAK,+BAAiC,IAAIC,cAAY3M,EAAKyM,iBAVxE,2BAYQ9E,KAAA,SAAKC,EAAaC,GAUxB,gBAVwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAKsT,oBAAsBxM,EAAMwM,oBAE7BxM,EAAMyM,sBACTvT,KAAKwT,uBAAuBzM,EAAQD,EAAMyM,oBAAoBpH,aAC9DnM,KAAKyT,6BAA6B5M,KAAKE,EAAQD,EAAM4M,wBAAwBvH,YAAapF,YAMrFV,QAAA,WACNrG,KAAK0T,wBAAwBvH,WAAW9F,UACxCY,YAAMZ,sBAQAsN,sBAAA,WAAkC,YAAYL,uBAG9CM,sBAAA,SAAsBC,GAE5B,OADA7T,KAAKsT,oBAAsBO,UAUrBC,uBAAA,WACN,YAAYP,oBAAsBvT,KAAKuT,oBAAoBpH,WAAa,QAOlEsH,2BAAA,WACN,YAAYF,oBAAsBvT,KAAK0T,wBAAwBvH,WAAa,QAItEqH,uBAAA,SAAuBpT,GAE7B,OADAJ,KAAKuT,oBAAsBvT,KAAK2L,MAAMC,KAAK,sBAAuB5L,KAAMI,YA/DxC4I,qBAInBqK,iBfA2B,6BeI7B1I,GAAX+C,wDACW/C,GAAX+C,gECTI1O,EhBIoC,6BgBD7B+U,cAAb,yEACiC/U,WADjC,2BAIQgV,mBAAA,WACN,WAAWX,EAAarT,KAAKC,IAAIkJ,WAAYnJ,SAGvCF,KAAA,SAAKR,cACLC,EAAUD,EAAQC,QAElBsO,EAActO,EAAQC,KAAKC,UAAY,GAuB7C,OAxBqBF,EAAQC,KAAKsO,WAAa,IAElCpO,QAAQ,SAACqO,EAAaC,GAClC,GAAID,EAAYnO,YAAcmO,EAAYnO,WAAWZ,GAAO,CAC3D,IAAMiV,EAAezK,EAAKwK,qBAW1B,GAVA1U,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAMiV,QAIIvN,IAApDqH,EAAYnO,WAAWZ,GAAM6U,oBAChCI,EAAaL,sBAAsB7F,EAAYnO,WAAWZ,GAAM6U,yBAKRnN,IAArDqH,EAAYnO,WAAWZ,GAAMuU,oBAAmC,CACnE,IAAMrF,EAAiBH,EAAYnO,WAAWZ,GAAMuU,oBAEpDU,EAAaT,uBADGlU,EAAQG,SAASoO,EAAYK,EAAeC,OAAOtO,SAEnEP,EAAQ8O,eAAe6F,EAAaR,6BAA8BvF,eAQ/DnO,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QA2BxB,OAzBAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,IAAM0F,EAAe1F,EAAS9D,aAA2BzL,GACzD,GAAIiV,EAAc,CACjB,IAAMjG,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAW3C,GAVAD,EAAYnO,WAAamO,EAAYnO,YAAc,GAInDmO,EAAYnO,WAAWZ,GAAQ,CAC9B6U,mBAAoBI,EAAaN,yBAK9BM,EAAaH,yBAA0B,CAC1C,IAAM1T,EAAU6T,EAAaH,yBACvBrF,EAAcwF,EAAaR,6BACjC1F,EAAYnO,WAAWZ,GAAMuU,oBAAsBjU,EAAQoP,qBAAqBtO,EAASqO,gBA5DpDhO,aAEnBsT,iBAAiB/U,ECJ5BkV,IAAAA,cAAb,wEACgC,QACfhV,cAAc,CAACC,eAAauM,UAC5BxM,gBjBCkB,wBiBJnC,iBAA2B8J,qBAIZkL,iBjBAoB,sBkBLnC,IAAMlV,ElBK6B,sBkBFtBmV,cAAb,yEACiCnV,WADjC,2BAIQoV,YAAA,WACN,WAAWF,EAAMlU,KAAKC,IAAIkJ,WAAYnJ,SAGhCF,KAAA,SAAKR,cAQX,OAPqBA,EAAQC,QAAQC,KAAKsO,WAAa,IAC1CpO,QAAQ,SAACqO,EAAaC,GAC9BD,EAAYnO,YAAcmO,EAAYnO,WAAWZ,IACpDM,EAAQwO,UAAUE,GAAelE,aAAa9K,EAAMwK,EAAK4K,yBAOrDrU,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAaxB,OAXAS,KAAKC,IAAIC,UACPoO,gBACA5O,QAAQ,SAAC6O,GACT,GAAIA,EAAS9D,aAAoBzL,GAAO,CACvC,IAAMgP,EAAgB1O,EAAQkP,iBAAiBhO,IAAI+N,GAC7CR,EAAcxO,EAAQC,KAAKsO,UAAUE,GAC3CD,EAAYnO,WAAamO,EAAYnO,YAAc,GACnDmO,EAAYnO,WAAWZ,GAAQ,eA7BAyB,aAEZ0T,iBAAiBnV,MCNnCA,EnBO+B,wBmBJxBqV,cAAb,yEACiCrV,WADjC,2BAICc,KAAA,SAAKwU,GACJ,eAGDvU,MAAA,SAAMuU,GACL,gBAToC7T,aAEd4T,iBAAiBrV,ECLzC,IAAMA,EpBQ4B,qBoBLrBuV,cAAb,yEACiCvV,EAChBE,eAAe,CAACC,eAAaC,kBAF9C,2BAKQC,QAAA,SAAQC,GAMd,OALAA,EAAQC,QAAQC,KAAKC,SAASC,QAAQ,SAACC,GAClCA,EAAWC,YAAcD,EAAWC,WAAWZ,KAClDW,EAAWE,OAASF,EAAWC,WAAWZ,GAAMa,kBAO5CC,KAAA,SAAKR,GACX,eAGMS,MAAA,SAAMT,GACZ,IAAMC,EAAUD,EAAQC,QAiBxB,OAfAS,KAAKC,IAAIC,UACPC,eACAT,QAAQ,SAACU,GACT,GAA8B,eAA1BA,EAAQC,cAAgC,CAC3C,IAAMC,EAAahB,EAAQiB,cAAcC,IAAIJ,GAC7Cb,EAAQC,KAAKC,SAASC,QAAQ,SAACC,GAC1BA,EAAWE,SAAWS,IACzBX,EAAWC,WAAaD,EAAWC,YAAc,GACjDD,EAAWC,WAAWZ,GAAQ,CAACa,OAAQF,EAAWE,eAC3CF,EAAWE,sBA/BUY,aAGX8T,iBAAiBvV,ECJ5BwV,IAAAA,cAAb,wEACgC,YACftV,cAAc,CAACC,eAAasV,cAC5BvV,gBrBIoB,wBqBD5BA,UAAgB,CAAC,EAAG,GACpBA,YAAY,EACZA,SAAe,CAAC,EAAG,GACnBA,iBAAoBwH,WAT7B,2BAWQG,KAAA,SAAKC,EAAaC,GAQxB,gBARwBA,IAAAA,EAAUC,iBAClCC,YAAMJ,eAAKC,EAAOC,GAElB/G,KAAK0U,QAAU5N,EAAM4N,QACrB1U,KAAK2U,UAAY7N,EAAM6N,UACvB3U,KAAK4U,OAAS9N,EAAM8N,OACpB5U,KAAK6U,UAAY/N,EAAM+N,kBAKjBC,UAAA,WAAoB,YAAYJ,WAChCK,UAAA,SAAUC,GAEhB,OADAhV,KAAK0U,QAAUM,UAITC,YAAA,WAAwB,YAAYN,aACpCO,YAAA,SAAYC,GAElB,OADAnV,KAAK2U,UAAYQ,UAIXC,SAAA,WAAmB,YAAYR,UAC/BS,SAAA,SAAShH,GAEf,OADArO,KAAK4U,OAASvG,UAIRiH,YAAA,WAAwB,YAAYT,aACpCU,YAAA,SAAYC,GAElB,OADAxV,KAAK6U,UAAYW,WA1CYxM,qBAIhBwL,iBrBGsB,4BsBR/BxV,EtBQ+B,wBsBLxByW,cAAb,yEACiCzW,WADjC,2BAIQ0W,gBAAA,WACN,WAAWlB,EAAUxU,KAAKC,IAAIkJ,WAAYnJ,SAGpCF,KAAA,SAAKR,GACX,cAA4C4G,MAAMC,KAAK7G,EAAQqW,aAAaC,0BAAY,YAA5EnH,OAAaP,OACxB,GAAKA,EAAetO,YAAesO,EAAetO,WAAWZ,GAA7D,CAEA,IAAM6W,EAAY7V,KAAK0V,kBACjBI,EAAe5H,EAAetO,WAAWZ,QAEnB0H,IAAxBoP,EAAad,QAAsBa,EAAUd,UAAUe,EAAad,aAC1CtO,IAA1BoP,EAAaX,UAAwBU,EAAUX,YAAYY,EAAaX,eACjDzO,IAAvBoP,EAAazH,OAAqBwH,EAAUR,SAASS,EAAazH,YACxC3H,IAA1BoP,EAAaN,UAAwBK,EAAUN,YAAYO,EAAaN,UAE5E/G,EAAY3E,aAAa9K,EAAM6W,IAEhC,eAGM9V,MAAA,SAAMT,GAEZ,IADA,UAA2B4G,MAAMC,KAAK7G,EAAQyW,kBAAkBH,0BACA,YAAvC1H,OAClB2H,OAAwBpL,aAAwBzL,GACjD6W,IAEL3H,EAAetO,WAAasO,EAAetO,YAAc,GACzDsO,EAAetO,WAAWZ,GAAQ,CACjCgW,OAAQa,EAAUf,YAClBK,SAAUU,EAAUZ,cACpB5G,MAAOwH,EAAUT,WACjBI,SAAUK,EAAUP,gBAGtB,gBAvCoC7U,aAEdgV,iBAAiBzW,ECK5BgX,IAAAA,EAAqB,CACjC3S,EACA4F,EACA0E,EACAqB,EACA2B,EACAuC,EACAf,EACA4B,EACAI,EACAE,EACAE,EACAkB,GAGYQ,GACZhX,UACG+W"}