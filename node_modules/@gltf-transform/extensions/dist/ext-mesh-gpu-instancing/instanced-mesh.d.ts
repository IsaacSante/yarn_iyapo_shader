import { Accessor, ExtensionProperty, PropertyType } from '@gltf-transform/core';
/** Documentation in {@link EXTENSIONS.md}. */
export declare class InstancedMesh extends ExtensionProperty {
    readonly propertyType = "InstancedMesh";
    readonly parentTypes: PropertyType[];
    readonly extensionName = "EXT_mesh_gpu_instancing";
    static EXTENSION_NAME: string;
    private attributes;
    copy(other: this, resolve?: <T extends import("@gltf-transform/core").Property>(t: T) => T): this;
    /** Returns an instance attribute as an {@link Accessor}. */
    getAttribute(semantic: string): Accessor;
    /**
     * Sets an instance attribute to an {@link Accessor}. All attributes must have the same
     * instance count.
     */
    setAttribute(semantic: string, accessor: Accessor): this;
    /**
     * Lists all instance attributes {@link Accessor}s associated with the InstancedMesh. Order
     * will be consistent with the order returned by {@link .listSemantics}().
     */
    listAttributes(): Accessor[];
    /**
     * Lists all instance attribute semantics associated with the primitive. Order will be
     * consistent with the order returned by {@link .listAttributes}().
     */
    listSemantics(): string[];
}
