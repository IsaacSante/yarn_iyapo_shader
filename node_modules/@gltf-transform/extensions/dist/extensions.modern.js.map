{"version":3,"file":"extensions.modern.js","sources":["../src/ext-texture-webp/texture-webp.ts","../src/constants.ts","../src/khr-draco-mesh-compression/decoder.ts","../src/khr-draco-mesh-compression/draco-mesh-compression.ts","../src/khr-lights-punctual/light.ts","../src/khr-lights-punctual/lights-punctual.ts","../../../node_modules/tslib/tslib.es6.js","../src/khr-materials-clearcoat/clearcoat.ts","../src/khr-materials-clearcoat/materials-clearcoat.ts","../src/khr-materials-ior/ior.ts","../src/khr-materials-ior/materials-ior.ts","../src/khr-materials-pbr-specular-glossiness/pbr-specular-glossiness.ts","../src/khr-materials-pbr-specular-glossiness/materials-pbr-specular-glossiness.ts","../src/khr-materials-sheen/sheen.ts","../src/khr-materials-sheen/materials-sheen.ts","../src/khr-materials-specular/specular.ts","../src/khr-materials-specular/materials-specular.ts","../src/khr-materials-transmission/transmission.ts","../src/khr-materials-transmission/materials-transmission.ts","../src/khr-materials-unlit/unlit.ts","../src/khr-materials-unlit/materials-unlit.ts","../src/khr-mesh-quantization/mesh-quantization.ts","../src/khr-texture-basisu/texture-basisu.ts","../src/khr-texture-transform/transform.ts","../src/khr-texture-transform/texture-transform.ts","../src/extensions.ts"],"sourcesContent":["import { Extension, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { EXT_TEXTURE_WEBP } from '../constants';\n\nconst NAME = EXT_TEXTURE_WEBP;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureWebP extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.TEXTURE];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic provide(context: ReaderContext): this {\n\t\tcontext.jsonDoc.json.textures.forEach((textureDef) => {\n\t\t\tif (textureDef.extensions && textureDef.extensions[NAME]) {\n\t\t\t\ttextureDef.source = textureDef.extensions[NAME].source;\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listTextures()\n\t\t\t.forEach((texture) => {\n\t\t\t\tif (texture.getMimeType() === 'image/webp') {\n\t\t\t\t\tconst imageIndex = context.imageIndexMap.get(texture);\n\t\t\t\t\tjsonDoc.json.textures.forEach((textureDef) => {\n\t\t\t\t\t\tif (textureDef.source === imageIndex) {\n\t\t\t\t\t\t\ttextureDef.extensions = textureDef.extensions || {}\n\t\t\t\t\t\t\ttextureDef.extensions[NAME] = {source: textureDef.source};\n\t\t\t\t\t\t\tdelete textureDef.source;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","export const EXT_TEXTURE_WEBP = 'EXT_texture_webp';\nexport const KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nexport const KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport const KHR_MATERIALS_CLEARCOAT = 'KHR_materials_clearcoat';\nexport const KHR_MATERIALS_IOR = 'KHR_materials_ior';\nexport const KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS = 'KHR_materials_pbrSpecularGlossiness';\nexport const KHR_MATERIALS_SHEEN = 'KHR_materials_sheen';\nexport const KHR_MATERIALS_SPECULAR = 'KHR_materials_specular';\nexport const KHR_MATERIALS_TRANSMISSION = 'KHR_materials_transmission';\nexport const KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport const KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\nexport const KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nexport const KHR_TEXTURE_TRANSFORM = 'KHR_texture_transform';\n","import { TypedArray, TypedArrayConstructor } from '@gltf-transform/core';\n\nexport let decoderModule: DRACO.DecoderModule;\n\n// Initialized when decoder module loads.\nlet COMPONENT_ARRAY: {[key: number]: TypedArrayConstructor};\nlet DATA_TYPE: {[key: number]: DRACO.DataType};\n\nexport function decodeGeometry(decoder: DRACO.Decoder, arrayBuffer: ArrayBuffer): DRACO.Mesh {\n\tlet buffer: DRACO.DecoderBuffer;\n\ttry {\n\t\tbuffer = new decoderModule.DecoderBuffer();\n\t\tbuffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n\t\tconst geometryType = decoder.GetEncodedGeometryType(buffer);\n\n\t\tif (geometryType !== decoderModule.TRIANGULAR_MESH) {\n\t\t\tthrow new Error('Unknown geometry type.');\n\t\t}\n\n\t\tconst dracoMesh = new decoderModule.Mesh();\n\t\tconst status = decoder.DecodeBufferToMesh(buffer, dracoMesh);\n\n\t\tif (!status.ok() || dracoMesh.ptr === 0) {\n\t\t\tthrow new Error('Decoding failure.');\n\t\t}\n\n\t\treturn dracoMesh;\n\t} finally {\n\t\tdecoderModule.destroy(buffer);\n\t}\n}\n\nexport function decodeIndex(decoder: DRACO.Decoder, mesh: DRACO.Mesh): Uint32Array {\n\tconst numFaces = mesh.num_faces();\n\tconst numIndices = numFaces * 3;\n\tconst byteLength = numIndices * Uint32Array.BYTES_PER_ELEMENT;\n\n\tconst ptr = decoderModule._malloc(byteLength);\n\tdecoder.GetTrianglesUInt32Array(mesh, byteLength, ptr);\n\tconst indices = new Uint32Array(decoderModule.HEAP32.buffer, ptr, numIndices).slice();\n\tdecoderModule._free(ptr);\n\n\treturn indices;\n}\n\nexport function decodeAttribute(\n\t\tdecoder: DRACO.Decoder,\n\t\tmesh: DRACO.Mesh,\n\t\tattribute: DRACO.Attribute,\n\t\taccessorDef: GLTF.IAccessor): TypedArray {\n\n\tconst dataType = DATA_TYPE[accessorDef.componentType];\n\tconst ArrayCtor = COMPONENT_ARRAY[accessorDef.componentType];\n\tconst numComponents = attribute.num_components();\n\tconst numPoints = mesh.num_points();\n\tconst numValues = numPoints * numComponents;\n\tconst byteLength: number = numValues * ArrayCtor.BYTES_PER_ELEMENT;\n\n\tconst ptr = decoderModule._malloc(byteLength);\n\tdecoder.GetAttributeDataArrayForAllPoints(mesh, attribute, dataType, byteLength, ptr);\n\tconst array: TypedArray = new ArrayCtor(decoderModule.HEAPF32.buffer, ptr, numValues).slice();\n\tdecoderModule._free(ptr);\n\n\treturn array;\n}\n\nexport function initDecoderModule (_decoderModule: DRACO.DecoderModule): void {\n\tdecoderModule = _decoderModule;\n\n\tCOMPONENT_ARRAY = {\n\t\t[GLTF.AccessorComponentType.FLOAT]: Float32Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_INT]: Uint32Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_SHORT]: Uint16Array,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_BYTE]: Uint8Array,\n\t\t[GLTF.AccessorComponentType.SHORT]: Int16Array,\n\t\t[GLTF.AccessorComponentType.BYTE]: Int8Array,\n\t};\n\n\tDATA_TYPE = {\n\t\t[GLTF.AccessorComponentType.FLOAT]: decoderModule.DT_FLOAT32,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_INT]: decoderModule.DT_UINT32,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_SHORT]: decoderModule.DT_UINT16,\n\t\t[GLTF.AccessorComponentType.UNSIGNED_BYTE]: decoderModule.DT_UINT8,\n\t\t[GLTF.AccessorComponentType.SHORT]: decoderModule.DT_INT16,\n\t\t[GLTF.AccessorComponentType.BYTE]: decoderModule.DT_INT8,\n\t};\n}\n\n","import { Extension, GLB_BUFFER, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_DRACO_MESH_COMPRESSION } from '../constants';\nimport { decodeAttribute, decodeGeometry, decodeIndex, initDecoderModule } from './decoder';\n\nconst NAME = KHR_DRACO_MESH_COMPRESSION;\n\ninterface DracoPrimitiveExtension {\n\tbufferView: number;\n\tattributes: {\n\t\t[name: string]: number;\n\t};\n}\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class DracoMeshCompression extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.PRIMITIVE];\n\tpublic readonly dependencies = ['draco3d.decoder'];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tprivate _decoderModule: DRACO.DecoderModule;\n\n\tpublic install(key: string, dependency: unknown): this {\n\t\tif (key === 'draco3d.decoder') {\n\t\t\tthis._decoderModule = dependency as DRACO.DecoderModule;\n\t\t\tinitDecoderModule(this._decoderModule);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic provide(context: ReaderContext): this {\n\t\tif (!this._decoderModule) {\n\t\t\tthrow new Error('Please install extension dependency, \"draco3d.decoder\".');\n\t\t}\n\n\t\tconst logger = this.doc.getLogger();\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst decoder = new this._decoderModule.Decoder();\n\t\tconst dracoMeshes: Map<number, DRACO.Mesh> = new Map();\n\n\t\tfor (const meshDef of jsonDoc.json.meshes) {\n\t\t\tfor (const primDef of meshDef.primitives) {\n\t\t\t\tif (!primDef.extensions || !primDef.extensions[NAME]) continue;\n\n\t\t\t\tconst dracoDef = primDef.extensions[NAME] as DracoPrimitiveExtension;\n\t\t\t\tlet dracoMesh = dracoMeshes.get(dracoDef.bufferView);\n\n\t\t\t\tif (!dracoMesh) {\n\t\t\t\t\tconst bufferViewDef = jsonDoc.json.bufferViews[dracoDef.bufferView];\n\t\t\t\t\tconst bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n\t\t\t\t\tconst resource = bufferDef.uri\n\t\t\t\t\t\t? jsonDoc.resources[bufferDef.uri]\n\t\t\t\t\t\t: jsonDoc.resources[GLB_BUFFER];\n\n\t\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\t\tconst byteLength = bufferViewDef.byteLength;\n\t\t\t\t\tconst compressedData = new Uint8Array(resource, byteOffset, byteLength);\n\n\t\t\t\t\tdracoMesh = decodeGeometry(decoder, compressedData);\n\t\t\t\t\tdracoMeshes.set(dracoDef.bufferView, dracoMesh);\n\t\t\t\t\tlogger.debug(`Decompressed ${compressedData.byteLength} bytes.`);\n\t\t\t\t}\n\n\t\t\t\t// Attributes.\n\t\t\t\tfor (const semantic in primDef.attributes) {\n\t\t\t\t\tconst accessorDef = context.jsonDoc.json.accessors[primDef.attributes[semantic]];\n\t\t\t\t\tconst dracoAttribute = decoder.GetAttributeByUniqueId(dracoMesh, dracoDef.attributes[semantic]);\n\t\t\t\t\tconst attributeArray = decodeAttribute(decoder, dracoMesh, dracoAttribute, accessorDef);\n\t\t\t\t\tcontext.accessors[primDef.attributes[semantic]].setArray(attributeArray);\n\t\t\t\t}\n\n\t\t\t\t// Indices.\n\t\t\t\tconst indicesArray = decodeIndex(decoder, dracoMesh);\n\t\t\t\tcontext.accessors[primDef.indices].setArray(indicesArray);\n\t\t\t}\n\n\t\t\tthis._decoderModule.destroy(decoder);\n\t\t\tfor (const dracoMesh of Array.from(dracoMeshes.values())) {\n\t\t\t\tthis._decoderModule.destroy(dracoMesh);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\tthis.dispose(); // Writes aren't implemented, so remove extension after unpacking.\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic write(context: WriterContext): this {\n\t\tthis.doc.getLogger().warn(`Writing ${this.extensionName} not yet implemented.`);\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, PropertyType, vec3 } from '@gltf-transform/core';\nimport { ColorUtils } from '@gltf-transform/core';\nimport { KHR_LIGHTS_PUNCTUAL } from '../constants';\n\nexport enum LightType {\n\tPOINT = 'point',\n\tSPOT = 'spot',\n\tDIRECTIONAL = 'directional',\n}\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Light extends ExtensionProperty {\n\tpublic readonly propertyType = 'Light';\n\tpublic readonly parentTypes = [PropertyType.NODE];\n\tpublic readonly extensionName = KHR_LIGHTS_PUNCTUAL;\n\tpublic static EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n\n\tprivate _color: vec3 = [1, 1, 1];\n\tprivate _intensity = 1;\n\tprivate _type: LightType;\n\tprivate _range: number = undefined;\n\n\tprivate _innerConeAngle = 0;\n\tprivate _outerConeAngle = Math.PI / 4;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._color = [...other._color] as vec3;\n\t\tthis._intensity = other._intensity;\n\t\tthis._type = other._type;\n\t\tthis._range = other._range;\n\n\t\tthis._innerConeAngle = other._innerConeAngle;\n\t\tthis._outerConeAngle = other._outerConeAngle;\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * COLOR.\n\t */\n\n\t/** Components (R, G, B) of light's color in linear space. */\n\tpublic getColor(): vec3 { return this._color; }\n\n\t/** Components (R, G, B) of light's color in linear space. */\n\tpublic setColor(color: vec3): this {\n\t\tthis._color = color;\n\t\treturn this;\n\t}\n\n\t/** Hex light color in sRGB colorspace. */\n\tpublic getColorHex(): number { return ColorUtils.factorToHex(this._color); }\n\n\t/** Hex light color in sRGB colorspace. */\n\tpublic setColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._color);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * INTENSITY.\n\t */\n\n\t/**\n\t * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n\t * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n\t */\n\tpublic getIntensity(): number { return this._intensity; }\n\n\t/**\n\t * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n\t * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n\t */\n\tpublic setIntensity(intensity: number): this {\n\t\tthis._intensity = intensity;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * TYPE.\n\t */\n\n\t/** Type. */\n\tpublic getType(): LightType { return this._type; }\n\n\t/** Type. */\n\tpublic setType(type: LightType): this {\n\t\tthis._type = type;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * RANGE.\n\t */\n\n\t/**\n\t * Hint defining a distance cutoff at which the light's intensity may be considered to have\n\t * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n\t * is assumed to be infinite.\n\t */\n\tpublic getRange(): number { return this._range; }\n\n\t/**\n\t * Hint defining a distance cutoff at which the light's intensity may be considered to have\n\t * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n\t * is assumed to be infinite.\n\t */\n\tpublic setRange(range: number): this {\n\t\tthis._range = range;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * SPOT LIGHT PROPERTIES\n\t */\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and\n\t * < outerConeAngle.\n\t */\n\tpublic getInnerConeAngle(): number { return this._innerConeAngle; }\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and\n\t * < outerConeAngle.\n\t */\n\tpublic setInnerConeAngle(innerConeAngle: number): this {\n\t\tthis._innerConeAngle = innerConeAngle;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n\t * ≤ PI / 2.0.\n\t */\n\tpublic getOuterConeAngle(): number { return this._outerConeAngle; }\n\n\t/**\n\t * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n\t * ≤ PI / 2.0.\n\t */\n\tpublic setOuterConeAngle(outerConeAngle: number): this {\n\t\tthis._outerConeAngle = outerConeAngle;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_LIGHTS_PUNCTUAL } from '../constants';\nimport { Light, LightType } from './light';\n\nconst NAME = KHR_LIGHTS_PUNCTUAL;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class LightsPunctual extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createLight(): Light {\n\t\treturn new Light(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tif (!jsonDoc.json.extensions || !jsonDoc.json.extensions[NAME]) return this;\n\n\t\tconst lightDefs = jsonDoc.json.extensions[NAME].lights || [];\n\t\tconst lights = lightDefs.map((lightDef) => {\n\t\t\tconst light = this.createLight()\n\t\t\t\t.setName(lightDef.name || '')\n\t\t\t\t.setType(lightDef.type);\n\n\t\t\tif (lightDef.color !== undefined) light.setColor(lightDef.color);\n\t\t\tif (lightDef.intensity !== undefined) light.setIntensity(lightDef.intensity);\n\t\t\tif (lightDef.range !== undefined) light.setRange(lightDef.range);\n\n\t\t\tif (lightDef.innerConeAngle !== undefined) {\n\t\t\t\tlight.setInnerConeAngle(lightDef.innerConeAngle);\n\t\t\t}\n\t\t\tif (lightDef.outerConeAngle !== undefined) {\n\t\t\t\tlight.setOuterConeAngle(lightDef.outerConeAngle);\n\t\t\t}\n\n\t\t\treturn light;\n\t\t});\n\n\t\tjsonDoc.json.nodes.forEach((nodeDef, nodeIndex) => {\n\t\t\tif (!nodeDef.extensions || !nodeDef.extensions[NAME]) return;\n\t\t\tcontext.nodes[nodeIndex].setExtension(NAME, lights[nodeDef.extensions[NAME].light]);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tif (this.properties.size === 0) return this;\n\n\t\tconst lightDefs = [];\n\t\tconst lightIndexMap = new Map<Light, number>();\n\n\t\tfor (const property of this.properties) {\n\t\t\tconst light = property as Light;\n\t\t\tconst lightDef = {\n\t\t\t\ttype: light.getType(),\n\t\t\t\tcolor: light.getColor(),\n\t\t\t\tintensity: light.getIntensity(),\n\t\t\t\trange: light.getRange(),\n\t\t\t};\n\n\t\t\tif (light.getName()) lightDef['name'] = light.getName();\n\n\t\t\tif (light.getType() === LightType.SPOT) {\n\t\t\t\tlightDef['innerConeAngle'] = light.getInnerConeAngle();\n\t\t\t\tlightDef['outerConeAngle'] = light.getOuterConeAngle();\n\t\t\t}\n\n\t\t\tlightDefs.push(lightDef);\n\t\t\tlightIndexMap.set(light, lightDefs.length - 1)\n\t\t}\n\n\t\tthis.doc.getRoot()\n\t\t\t.listNodes()\n\t\t\t.forEach((node) => {\n\t\t\t\tconst light = node.getExtension<Light>(NAME);\n\t\t\t\tif (light) {\n\t\t\t\t\tconst nodeIndex = context.nodeIndexMap.get(node);\n\t\t\t\t\tconst nodeDef = jsonDoc.json.nodes[nodeIndex];\n\t\t\t\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\t\t\t\tnodeDef.extensions[NAME] = {light: lightIndexMap.get(light)};\n\t\t\t\t}\n\t\t\t});\n\n\t\tjsonDoc.json.extensions = jsonDoc.json.extensions || {};\n\t\tjsonDoc.json.extensions[NAME] = {lights: lightDefs};\n\n\t\treturn this;\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { COPY_IDENTITY, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo } from '@gltf-transform/core';\nimport { KHR_MATERIALS_CLEARCOAT } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Clearcoat extends ExtensionProperty {\n\tpublic readonly propertyType = 'Clearcoat';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_CLEARCOAT;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\n\tprivate _clearcoatFactor = 0.0;\n\tprivate _clearcoatRoughnessFactor = 0.0;\n\tprivate _clearcoatNormalScale = 1.0;\n\n\t@GraphChild private clearcoatTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private clearcoatRoughnessTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatRoughnessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatRoughnessTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private clearcoatNormalTexture: Link<this, Texture> = null;\n\t@GraphChild private clearcoatNormalTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('clearcoatNormalTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._clearcoatFactor = other._clearcoatFactor;\n\t\tthis._clearcoatRoughnessFactor = other._clearcoatRoughnessFactor;\n\t\tthis._clearcoatNormalScale = other._clearcoatNormalScale;\n\n\t\tif (other.clearcoatTexture) {\n\t\t\tthis.setClearcoatTexture(resolve(other.clearcoatTexture.getChild()));\n\t\t\tthis.getClearcoatTextureInfo().copy(resolve(other.clearcoatTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.clearcoatRoughnessTexture) {\n\t\t\tthis.setClearcoatRoughnessTexture(resolve(other.clearcoatRoughnessTexture.getChild()));\n\t\t\tthis.getClearcoatRoughnessTextureInfo().copy(resolve(other.clearcoatRoughnessTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.clearcoatNormalTexture) {\n\t\t\tthis.setClearcoatNormalTexture(resolve(other.clearcoatNormalTexture.getChild()));\n\t\t\tthis.getClearcoatNormalTextureInfo().copy(resolve(other.clearcoatNormalTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.clearcoatTextureInfo.getChild().dispose();\n\t\tthis.clearcoatRoughnessTextureInfo.getChild().dispose();\n\t\tthis.clearcoatNormalTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat.\n\t */\n\n\t/** Clearcoat; linear multiplier. See {@link getClearcoatTexture}. */\n\tpublic getClearcoatFactor(): number { return this._clearcoatFactor; }\n\n\t/** Clearcoat; linear multiplier. See {@link getClearcoatTexture}. */\n\tpublic setClearcoatFactor(clearcoatFactor: number): this {\n\t\tthis._clearcoatFactor = clearcoatFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat texture; linear multiplier. The `r` channel of this texture specifies an amount\n\t * [0-1] of coating over the surface of the material, which may have its own roughness and\n\t * normal map properties.\n\t */\n\tpublic getClearcoatTexture(): Texture {\n\t\treturn this.clearcoatTexture ? this.clearcoatTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatTexture ? this.clearcoatTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat texture. See {@link getClearcoatTexture}. */\n\tpublic setClearcoatTexture(texture: Texture): this {\n\t\tthis.clearcoatTexture = this.graph.link('clearcoatTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat roughness.\n\t */\n\n\t/** Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}. */\n\tpublic getClearcoatRoughnessFactor(): number { return this._clearcoatRoughnessFactor; }\n\n\t/** Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}. */\n\tpublic setClearcoatRoughnessFactor(clearcoatRoughnessFactor: number): this {\n\t\tthis._clearcoatRoughnessFactor = clearcoatRoughnessFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat roughness texture; linear multiplier. The `g` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic getClearcoatRoughnessTexture(): Texture {\n\t\treturn this.clearcoatRoughnessTexture ? this.clearcoatRoughnessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatRoughnessTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatRoughnessTexture ? this.clearcoatRoughnessTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat roughness texture. See {@link getClearcoatRoughnessTexture}. */\n\tpublic setClearcoatRoughnessTexture(texture: Texture): this {\n\t\tthis.clearcoatRoughnessTexture = this.graph.link('clearcoatRoughnessTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Clearcoat normals.\n\t */\n\n\t/** Clearcoat normal scale. See {@link getClearcoatNormalTexture}. */\n\tpublic getClearcoatNormalScale(): number { return this._clearcoatNormalScale; }\n\n\t/** Clearcoat normal scale. See {@link getClearcoatNormalTexture}. */\n\tpublic setClearcoatNormalScale(clearcoatNormalScale: number): this {\n\t\tthis._clearcoatNormalScale = clearcoatNormalScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clearcoat normal map. Independent of the material base layer normal map.\n\t */\n\tpublic getClearcoatNormalTexture(): Texture {\n\t\treturn this.clearcoatNormalTexture ? this.clearcoatNormalTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its clearcoat normal texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getClearcoatNormalTextureInfo(): TextureInfo {\n\t\treturn this.clearcoatNormalTexture ? this.clearcoatNormalTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets clearcoat normal texture. See {@link getClearcoatNormalTexture}. */\n\tpublic setClearcoatNormalTexture(texture: Texture): this {\n\t\tthis.clearcoatNormalTexture = this.graph.link('clearcoatNormalTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_CLEARCOAT } from '../constants';\nimport { Clearcoat } from './clearcoat';\n\nconst NAME = KHR_MATERIALS_CLEARCOAT;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsClearcoat extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createClearcoat(): Clearcoat {\n\t\treturn new Clearcoat(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst clearcoat = this.createClearcoat();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, clearcoat);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatFactor !== undefined) {\n\t\t\t\t\tclearcoat.setClearcoatFactor(materialDef.extensions[NAME].clearcoatFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatRoughnessFactor !== undefined) {\n\t\t\t\t\tclearcoat.setClearcoatRoughnessFactor(materialDef.extensions[NAME].clearcoatRoughnessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatRoughnessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatRoughnessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatRoughnessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatRoughnessTextureInfo(), textureInfoDef);;\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].clearcoatNormalTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].clearcoatNormalTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tclearcoat.setClearcoatNormalTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(clearcoat.getClearcoatNormalTextureInfo(), textureInfoDef);\n\t\t\t\t\tif (textureInfoDef.scale !== undefined) {\n\t\t\t\t\t\tclearcoat.setClearcoatNormalScale(textureInfoDef.scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst clearcoat = material.getExtension<Clearcoat>(NAME);\n\t\t\t\tif (clearcoat) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tclearcoatFactor: clearcoat.getClearcoatFactor(),\n\t\t\t\t\t\tclearcoatRoughnessFactor: clearcoat.getClearcoatRoughnessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (clearcoat.getClearcoatTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (clearcoat.getClearcoatRoughnessTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatRoughnessTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatRoughnessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (clearcoat.getClearcoatNormalTexture()) {\n\t\t\t\t\t\tconst texture = clearcoat.getClearcoatNormalTexture();\n\t\t\t\t\t\tconst textureInfo = clearcoat.getClearcoatNormalTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatNormalTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t\tif (clearcoat.getClearcoatNormalScale() !== 1) {\n\t\t\t\t\t\t\tmaterialDef.extensions[NAME].clearcoatNormalTexture.scale = clearcoat.getClearcoatNormalScale();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, PropertyType } from '@gltf-transform/core';\nimport { KHR_MATERIALS_IOR } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class IOR extends ExtensionProperty {\n\tpublic readonly propertyType = 'IOR';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_IOR;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_IOR;\n\n\tprivate _ior = 0.0;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._ior = other._ior;\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * IOR.\n\t */\n\n\t/** IOR. */\n\tpublic getIOR(): number { return this._ior; }\n\n\t/** IOR. */\n\tpublic setIOR(ior: number): this {\n\t\tthis._ior = ior;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_IOR } from '../constants';\nimport { IOR } from './ior';\n\nconst NAME = KHR_MATERIALS_IOR;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsIOR extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createIOR(): IOR {\n\t\treturn new IOR(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst ior = this.createIOR();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, ior);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].ior !== undefined) {\n\t\t\t\t\tior.setIOR(materialDef.extensions[NAME].ior);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst ior = material.getExtension<IOR>(NAME);\n\t\t\t\tif (ior) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tior: ior.getIOR(),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3, vec4 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class PBRSpecularGlossiness extends ExtensionProperty {\n\tpublic readonly propertyType = 'PBRSpecularGlossiness';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n\tprivate _diffuseFactor: vec4 = [1.0, 1.0, 1.0, 1.0];\n\tprivate _specularFactor: vec3 = [1.0, 1.0, 1.0];\n\tprivate _glossinessFactor = 1.0;\n\n\t@GraphChild private diffuseTexture: Link<this, Texture> = null;\n\t@GraphChild private diffuseTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('diffuseTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private specularGlossinessTexture: Link<this, Texture> = null;\n\t@GraphChild private specularGlossinessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('specularGlossinessTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._diffuseFactor = other._diffuseFactor;\n\t\tthis._specularFactor = other._specularFactor;\n\t\tthis._glossinessFactor = other._glossinessFactor;\n\n\t\tif (other.diffuseTexture) {\n\t\t\tthis.setDiffuseTexture(resolve(other.diffuseTexture.getChild()));\n\t\t\tthis.getDiffuseTextureInfo().copy(resolve(other.diffuseTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.specularGlossinessTexture) {\n\t\t\tthis.setSpecularGlossinessTexture(resolve(other.specularGlossinessTexture.getChild()));\n\t\t\tthis.getSpecularGlossinessTextureInfo().copy(resolve(other.specularGlossinessTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.diffuseTextureInfo.getChild().dispose();\n\t\tthis.specularGlossinessTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Diffuse.\n\t */\n\n\t/** Diffuse; linear multiplier. See {@link getDiffuseTexture}. */\n\tpublic getDiffuseFactor(): vec4 { return this._diffuseFactor; }\n\n\t/** Diffuse; linear multiplier. See {@link getDiffuseTexture}. */\n\tpublic setDiffuseFactor(diffuseFactor: vec4): this {\n\t\tthis._diffuseFactor = diffuseFactor;\n\t\treturn this;\n\t}\n\n\t/** Diffuse; hex color in sRGB colorspace. */\n\tpublic getDiffuseHex(): number { return ColorUtils.factorToHex(this._diffuseFactor); }\n\n\t/** Diffuse; hex color in sRGB colorspace. */\n\tpublic setDiffuseHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._diffuseFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Diffuse texture; linear multiplier. Alternative to baseColorTexture used within the\n\t * spec/gloss PBR workflow.\n\t */\n\tpublic getDiffuseTexture(): Texture {\n\t\treturn this.diffuseTexture ? this.diffuseTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its diffuse texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getDiffuseTextureInfo(): TextureInfo {\n\t\treturn this.diffuseTexture ? this.diffuseTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets diffuse texture. See {@link getDiffuseTexture}. */\n\tpublic setDiffuseTexture(texture: Texture): this {\n\t\tthis.diffuseTexture = this.graph.link('diffuseTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Specular.\n\t */\n\n\t/** Specular; linear multiplier. */\n\tpublic getSpecularFactor(): vec3 { return this._specularFactor; }\n\n\t/** Specular; linear multiplier. */\n\tpublic setSpecularFactor(specularFactor: vec3): this {\n\t\tthis._specularFactor = specularFactor;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Glossiness.\n\t */\n\n\t/** Glossiness; linear multiplier. */\n\tpublic getGlossinessFactor(): number { return this._glossinessFactor; }\n\n\t/** Glossiness; linear multiplier. */\n\tpublic setGlossinessFactor(glossinessFactor: number): this {\n\t\tthis._glossinessFactor = glossinessFactor;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Specular/Glossiness.\n\t */\n\n\t/** Spec/gloss texture; linear multiplier. */\n\tpublic getSpecularGlossinessTexture(): Texture {\n\t\treturn this.specularGlossinessTexture ? this.specularGlossinessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its spec/gloss texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSpecularGlossinessTextureInfo(): TextureInfo {\n\t\treturn this.specularGlossinessTexture ? this.specularGlossinessTextureInfo.getChild() : null;\n\t}\n\n\t/** Spec/gloss texture; linear multiplier. */\n\tpublic setSpecularGlossinessTexture(texture: Texture): this {\n\t\tthis.specularGlossinessTexture = this.graph.link('specularGlossinessTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS } from '../constants';\nimport { PBRSpecularGlossiness } from './pbr-specular-glossiness';\n\nconst NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsPBRSpecularGlossiness extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createPBRSpecularGlossiness(): PBRSpecularGlossiness {\n\t\treturn new PBRSpecularGlossiness(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst specGloss = this.createPBRSpecularGlossiness();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, specGloss);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].diffuseFactor !== undefined) {\n\t\t\t\t\tspecGloss.setDiffuseFactor(materialDef.extensions[NAME].diffuseFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularFactor !== undefined) {\n\t\t\t\t\tspecGloss.setSpecularFactor(materialDef.extensions[NAME].specularFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].glossinessFactor !== undefined) {\n\t\t\t\t\tspecGloss.setGlossinessFactor(materialDef.extensions[NAME].glossinessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].diffuseTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].diffuseTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecGloss.setDiffuseTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specGloss.getDiffuseTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularGlossinessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].specularGlossinessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecGloss.setSpecularGlossinessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specGloss.getSpecularGlossinessTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst specGloss = material.getExtension<PBRSpecularGlossiness>(NAME);\n\t\t\t\tif (specGloss) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tdiffuseFactor: specGloss.getDiffuseFactor(),\n\t\t\t\t\t\tspecularFactor: specGloss.getSpecularFactor(),\n\t\t\t\t\t\tglossinessFactor: specGloss.getGlossinessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (specGloss.getDiffuseTexture()) {\n\t\t\t\t\t\tconst texture = specGloss.getDiffuseTexture();\n\t\t\t\t\t\tconst textureInfo = specGloss.getDiffuseTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].diffuseTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (specGloss.getSpecularGlossinessTexture()) {\n\t\t\t\t\t\tconst texture = specGloss.getSpecularGlossinessTexture();\n\t\t\t\t\t\tconst textureInfo = specGloss.getSpecularGlossinessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].specularGlossinessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SHEEN } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Sheen extends ExtensionProperty {\n\tpublic readonly propertyType = 'Sheen';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_SHEEN;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\n\tprivate _sheenColorFactor: vec3 = [0.0, 0.0, 0.0];\n\tprivate _sheenRoughnessFactor = 0.0;\n\n\t@GraphChild private sheenColorTexture: Link<this, Texture> = null;\n\t@GraphChild private sheenColorTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('sheenColorTextureInfo', this, new TextureInfo(this.graph));\n\n\t@GraphChild private sheenRoughnessTexture: Link<this, Texture> = null;\n\t@GraphChild private sheenRoughnessTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('sheenRoughnessTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._sheenColorFactor = other._sheenColorFactor;\n\t\tthis._sheenRoughnessFactor = other._sheenRoughnessFactor;\n\n\t\tif (other.sheenColorTexture) {\n\t\t\tthis.setSheenColorTexture(resolve(other.sheenColorTexture.getChild()));\n\t\t\tthis.getSheenColorTextureInfo().copy(resolve(other.sheenColorTextureInfo.getChild()), resolve);\n\t\t}\n\t\tif (other.sheenRoughnessTexture) {\n\t\t\tthis.setSheenRoughnessTexture(resolve(other.sheenRoughnessTexture.getChild()));\n\t\t\tthis.getSheenRoughnessTextureInfo().copy(resolve(other.sheenRoughnessTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.sheenColorTextureInfo.getChild().dispose();\n\t\tthis.sheenRoughnessTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Sheen color.\n\t */\n\n\t/** Sheen; linear multiplier. */\n\tpublic getSheenColorFactor(): vec3 { return this._sheenColorFactor; }\n\n\t/** Sheen; hex color in sRGB colorspace. */\n\tpublic getSheenColorHex(): number { return ColorUtils.factorToHex(this._sheenColorFactor); }\n\n\t/** Sheen; linear multiplier. */\n\tpublic setSheenColorFactor(sheenColorFactor: vec3): this {\n\t\tthis._sheenColorFactor = sheenColorFactor;\n\t\treturn this;\n\t}\n\n\t/** Sheen; hex color in sRGB colorspace. */\n\tpublic setSheenColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._sheenColorFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sheen color texture, in sRGB colorspace.\n\t */\n\tpublic getSheenColorTexture(): Texture {\n\t\treturn this.sheenColorTexture ? this.sheenColorTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its sheen color texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSheenColorTextureInfo(): TextureInfo {\n\t\treturn this.sheenColorTexture ? this.sheenColorTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets sheen color texture. See {@link getSheenColorTexture}. */\n\tpublic setSheenColorTexture(texture: Texture): this {\n\t\tthis.sheenColorTexture = this.graph.link('sheenColorTexture', this, texture);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Sheen roughness.\n\t */\n\n\t/** Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}. */\n\tpublic getSheenRoughnessFactor(): number { return this._sheenRoughnessFactor; }\n\n\t/** Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}. */\n\tpublic setSheenRoughnessFactor(sheenRoughnessFactor: number): this {\n\t\tthis._sheenRoughnessFactor = sheenRoughnessFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sheen roughness texture; linear multiplier. The `a` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic getSheenRoughnessTexture(): Texture {\n\t\treturn this.sheenRoughnessTexture ? this.sheenRoughnessTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its sheen roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getSheenRoughnessTextureInfo(): TextureInfo {\n\t\treturn this.sheenRoughnessTexture ? this.sheenRoughnessTextureInfo.getChild() : null;\n\t}\n\n\t/**\n\t * Sets sheen roughness texture.  The `a` channel of this texture specifies\n\t * roughness, independent of the base layer's roughness.\n\t */\n\tpublic setSheenRoughnessTexture(texture: Texture): this {\n\t\tthis.sheenRoughnessTexture = this.graph.link('sheenRoughnessTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SHEEN } from '../constants';\nimport { Sheen } from './sheen';\n\nconst NAME = KHR_MATERIALS_SHEEN;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsSheen extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createSheen(): Sheen {\n\t\treturn new Sheen(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst sheen = this.createSheen();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, sheen);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].sheenColorFactor !== undefined) {\n\t\t\t\t\tsheen.setSheenColorFactor(materialDef.extensions[NAME].sheenColorFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].sheenRoughnessFactor !== undefined) {\n\t\t\t\t\tsheen.setSheenRoughnessFactor(materialDef.extensions[NAME].sheenRoughnessFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].sheenColorTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].sheenColorTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tsheen.setSheenColorTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(sheen.getSheenColorTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].sheenRoughnessTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].sheenRoughnessTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tsheen.setSheenRoughnessTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(sheen.getSheenRoughnessTextureInfo(), textureInfoDef);;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst sheen = material.getExtension<Sheen>(NAME);\n\t\t\t\tif (sheen) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tsheenColorFactor: sheen.getSheenColorFactor(),\n\t\t\t\t\t\tsheenRoughnessFactor: sheen.getSheenRoughnessFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (sheen.getSheenColorTexture()) {\n\t\t\t\t\t\tconst texture = sheen.getSheenColorTexture();\n\t\t\t\t\t\tconst textureInfo = sheen.getSheenColorTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].sheenColorTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif (sheen.getSheenRoughnessTexture()) {\n\t\t\t\t\t\tconst texture = sheen.getSheenRoughnessTexture();\n\t\t\t\t\t\tconst textureInfo = sheen.getSheenRoughnessTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].sheenRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ColorUtils, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo, vec3 } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SPECULAR } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Specular extends ExtensionProperty {\n\tpublic readonly propertyType = 'Specular';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_SPECULAR;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\n\tprivate _specularFactor = 1.0;\n\tprivate _specularColorFactor: vec3 = [1.0, 1.0, 1.0];\n\n\t@GraphChild private specularTexture: Link<this, Texture> = null;\n\t@GraphChild private specularTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('specularTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._specularFactor = other._specularFactor;\n\n\t\tif (other.specularTexture) {\n\t\t\tthis.setSpecularTexture(resolve(other.specularTexture.getChild()));\n\t\t\tthis.getSpecularTextureInfo().copy(resolve(other.specularTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.specularTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Specular.\n\t */\n\n\t/** Specular; linear multiplier. See {@link getSpecularTexture}. */\n\tpublic getSpecularFactor(): number { return this._specularFactor; }\n\n\t/** Specular; linear multiplier. See {@link getSpecularTexture}. */\n\tpublic setSpecularFactor(specularFactor: number): this {\n\t\tthis._specularFactor = specularFactor;\n\t\treturn this;\n\t}\n\n\t/** Specular color; components in linear space. See {@link getSpecularTexture}. */\n\tpublic getSpecularColorFactor(): vec3 { return this._specularColorFactor; }\n\n\t/** Specular color; components in linear space. See {@link getSpecularTexture}. */\n\tpublic setSpecularColorFactor(specularColorFactor: vec3): this {\n\t\tthis._specularColorFactor = specularColorFactor;\n\t\treturn this;\n\t}\n\n\t/** Specular color; hexadecimal in sRGB colorspace. See {@link getSpecularTexture} */\n\tpublic getSpecularColorHex(): number {\n\t\treturn ColorUtils.factorToHex(this._specularColorFactor);\n\t}\n\n\t/** Specular color; hexadecimal in sRGB colorspace. See {@link getSpecularTexture} */\n\tpublic setSpecularColorHex(hex: number): this {\n\t\tColorUtils.hexToFactor(hex, this._specularColorFactor);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Specular texture; linear multiplier. Configures the strength of the specular reflection in\n\t * the dielectric BRDF. A value of zero disables the specular reflection, resulting in a pure\n\t * diffuse material.\n\t *\n\t * A 4-channel texture that defines the F0 color of the specular reflection (RGB channels,\n\t * encoded in sRGB) and the specular factor (A). Will be multiplied by specularFactor and\n\t * specularColorFactor.\n\t */\n\tpublic getSpecularTexture(): Texture {\n\t\treturn this.specularTexture ? this.specularTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its specular texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getSpecularTextureInfo(): TextureInfo {\n\t\treturn this.specularTexture ? this.specularTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets specular texture. See {@link getSpecularTexture}. */\n\tpublic setSpecularTexture(texture: Texture): this {\n\t\tthis.specularTexture = this.graph.link('specularTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_SPECULAR } from '../constants';\nimport { Specular } from './specular';\n\nconst NAME = KHR_MATERIALS_SPECULAR;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsSpecular extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createSpecular(): Specular {\n\t\treturn new Specular(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst specular = this.createSpecular();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, specular);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].specularFactor !== undefined) {\n\t\t\t\t\tspecular.setSpecularFactor(materialDef.extensions[NAME].specularFactor);\n\t\t\t\t}\n\t\t\t\tif (materialDef.extensions[NAME].specularColorFactor !== undefined) {\n\t\t\t\t\tspecular.setSpecularColorFactor(materialDef.extensions[NAME].specularColorFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].specularTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].specularTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\tspecular.setSpecularTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(specular.getSpecularTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst specular = material.getExtension<Specular>(NAME);\n\t\t\t\tif (specular) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\tspecularFactor: specular.getSpecularFactor(),\n\t\t\t\t\t\tspecularColorFactor: specular.getSpecularColorFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (specular.getSpecularTexture()) {\n\t\t\t\t\t\tconst texture = specular.getSpecularTexture();\n\t\t\t\t\t\tconst textureInfo = specular.getSpecularTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].specularTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, GraphChild, Link, PropertyType, Texture, TextureInfo } from '@gltf-transform/core';\nimport { KHR_MATERIALS_TRANSMISSION } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Transmission extends ExtensionProperty {\n\tpublic readonly propertyType = 'Transmission';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_TRANSMISSION;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n\tprivate _transmissionFactor = 0.0;\n\n\t@GraphChild private transmissionTexture: Link<this, Texture> = null;\n\t@GraphChild private transmissionTextureInfo: Link<this, TextureInfo> =\n\t\tthis.graph.link('transmissionTextureInfo', this, new TextureInfo(this.graph));\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._transmissionFactor = other._transmissionFactor;\n\n\t\tif (other.transmissionTexture) {\n\t\t\tthis.setTransmissionTexture(resolve(other.transmissionTexture.getChild()));\n\t\t\tthis.getTransmissionTextureInfo().copy(resolve(other.transmissionTextureInfo.getChild()), resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.transmissionTextureInfo.getChild().dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**********************************************************************************************\n\t * Transmission.\n\t */\n\n\t/** Transmission; linear multiplier. See {@link getTransmissionTexture}. */\n\tpublic getTransmissionFactor(): number { return this._transmissionFactor; }\n\n\t/** Transmission; linear multiplier. See {@link getTransmissionTexture}. */\n\tpublic setTransmissionFactor(transmissionFactor: number): this {\n\t\tthis._transmissionFactor = transmissionFactor;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transmission texture; linear multiplier. The `r` channel of this texture specifies\n\t * transmission [0-1] of the material's surface. By default this is a thin transparency\n\t * effect, but volume effects (refraction, subsurface scattering) may be introduced with the\n\t * addition of the `KHR_materials_volume` extension.\n\t */\n\tpublic getTransmissionTexture(): Texture {\n\t\treturn this.transmissionTexture ? this.transmissionTexture.getChild() : null;\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its transmission texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getTransmissionTextureInfo(): TextureInfo {\n\t\treturn this.transmissionTexture ? this.transmissionTextureInfo.getChild() : null;\n\t}\n\n\t/** Sets transmission texture. See {@link getTransmissionTexture}. */\n\tpublic setTransmissionTexture(texture: Texture): this {\n\t\tthis.transmissionTexture = this.graph.link('transmissionTexture', this, texture);\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_TRANSMISSION } from '../constants';\nimport { Transmission } from './transmission';\n\nconst NAME = KHR_MATERIALS_TRANSMISSION;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsTransmission extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createTransmission(): Transmission {\n\t\treturn new Transmission(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\t\tconst materialDefs = jsonDoc.json.materials || [];\n\t\tconst textureDefs = jsonDoc.json.textures || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tconst transmission = this.createTransmission();\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, transmission);\n\n\t\t\t\t// Factors.\n\n\t\t\t\tif (materialDef.extensions[NAME].transmissionFactor !== undefined) {\n\t\t\t\t\ttransmission.setTransmissionFactor(materialDef.extensions[NAME].transmissionFactor);\n\t\t\t\t}\n\n\t\t\t\t// Textures.\n\n\t\t\t\tif (materialDef.extensions[NAME].transmissionTexture !== undefined) {\n\t\t\t\t\tconst textureInfoDef = materialDef.extensions[NAME].transmissionTexture;\n\t\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source];\n\t\t\t\t\ttransmission.setTransmissionTexture(texture);\n\t\t\t\t\tcontext.setTextureInfo(transmission.getTransmissionTextureInfo(), textureInfoDef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tconst transmission = material.getExtension<Transmission>(NAME);\n\t\t\t\tif (transmission) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\n\t\t\t\t\t// Factors.\n\n\t\t\t\t\tmaterialDef.extensions[NAME] = {\n\t\t\t\t\t\ttransmissionFactor: transmission.getTransmissionFactor(),\n\t\t\t\t\t};\n\n\t\t\t\t\t// Textures.\n\n\t\t\t\t\tif (transmission.getTransmissionTexture()) {\n\t\t\t\t\t\tconst texture = transmission.getTransmissionTexture();\n\t\t\t\t\t\tconst textureInfo = transmission.getTransmissionTextureInfo();\n\t\t\t\t\t\tmaterialDef.extensions[NAME].transmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { ExtensionProperty } from '@gltf-transform/core';\nimport { PropertyType } from '@gltf-transform/core';\nimport { KHR_MATERIALS_UNLIT } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Unlit extends ExtensionProperty {\n\tpublic readonly propertyType = 'Unlit';\n\tpublic readonly parentTypes = [PropertyType.MATERIAL];\n\tpublic readonly extensionName = KHR_MATERIALS_UNLIT;\n\tpublic static EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MATERIALS_UNLIT } from '../constants';\nimport { Unlit } from './unlit';\n\nconst NAME = KHR_MATERIALS_UNLIT;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MaterialsUnlit extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createUnlit(): Unlit {\n\t\treturn new Unlit(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tconst materialDefs = context.jsonDoc.json.materials || [];\n\t\tmaterialDefs.forEach((materialDef, materialIndex) => {\n\t\t\tif (materialDef.extensions && materialDef.extensions[NAME]) {\n\t\t\t\tcontext.materials[materialIndex].setExtension(NAME, this.createUnlit());\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listMaterials()\n\t\t\t.forEach((material) => {\n\t\t\t\tif (material.getExtension<Unlit>(NAME)) {\n\t\t\t\t\tconst materialIndex = context.materialIndexMap.get(material);\n\t\t\t\t\tconst materialDef = jsonDoc.json.materials[materialIndex];\n\t\t\t\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\t\t\t\tmaterialDef.extensions[NAME] = {};\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_MESH_QUANTIZATION } from '../constants';\n\nconst NAME = KHR_MESH_QUANTIZATION;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class MeshQuantization extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tread(_: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\twrite(_: WriterContext): this {\n\t\treturn this;\n\t}\n}\n","import { Extension, PropertyType, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_TEXTURE_BASISU } from '../constants';\n\nconst NAME = KHR_TEXTURE_BASISU;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureBasisu extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic readonly provideTypes = [PropertyType.TEXTURE];\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic provide(context: ReaderContext): this {\n\t\tcontext.jsonDoc.json.textures.forEach((textureDef) => {\n\t\t\tif (textureDef.extensions && textureDef.extensions[NAME]) {\n\t\t\t\ttextureDef.source = textureDef.extensions[NAME].source;\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic read(context: ReaderContext): this {\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst jsonDoc = context.jsonDoc;\n\n\t\tthis.doc.getRoot()\n\t\t\t.listTextures()\n\t\t\t.forEach((texture) => {\n\t\t\t\tif (texture.getMimeType() === 'image/ktx2') {\n\t\t\t\t\tconst imageIndex = context.imageIndexMap.get(texture);\n\t\t\t\t\tjsonDoc.json.textures.forEach((textureDef) => {\n\t\t\t\t\t\tif (textureDef.source === imageIndex) {\n\t\t\t\t\t\t\ttextureDef.extensions = textureDef.extensions || {}\n\t\t\t\t\t\t\ttextureDef.extensions[NAME] = {source: textureDef.source};\n\t\t\t\t\t\t\tdelete textureDef.source;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { COPY_IDENTITY, ExtensionProperty, vec2 } from '@gltf-transform/core';\nimport { PropertyType } from '@gltf-transform/core';\nimport { KHR_TEXTURE_TRANSFORM } from '../constants';\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class Transform extends ExtensionProperty {\n\tpublic readonly propertyType = 'Transform';\n\tpublic readonly parentTypes = [PropertyType.TEXTURE_INFO];\n\tpublic readonly extensionName = KHR_TEXTURE_TRANSFORM;\n\tpublic static EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\n\tprivate _offset: vec2 = [0, 0];\n\tprivate _rotation = 0;\n\tprivate _scale: vec2 = [1, 1];\n\tprivate _texCoord: number = undefined;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\n\t\tthis._offset = other._offset;\n\t\tthis._rotation = other._rotation;\n\t\tthis._scale = other._scale;\n\t\tthis._texCoord = other._texCoord;\n\n\t\treturn this;\n\t}\n\n\tpublic getOffset(): vec2 { return this._offset; }\n\tpublic setOffset(offset: vec2): this {\n\t\tthis._offset = offset;\n\t\treturn this;\n\t}\n\n\tpublic getRotation(): number { return this._rotation; }\n\tpublic setRotation(rotation: number): this {\n\t\tthis._rotation = rotation;\n\t\treturn this;\n\t}\n\n\tpublic getScale(): vec2 { return this._scale; }\n\tpublic setScale(scale: vec2): this {\n\t\tthis._scale = scale;\n\t\treturn this;\n\t}\n\n\tpublic getTexCoord(): number { return this._texCoord; }\n\tpublic setTexCoord(texCoord: number): this {\n\t\tthis._texCoord = texCoord;\n\t\treturn this;\n\t}\n}\n","import { Extension, ReaderContext, WriterContext } from '@gltf-transform/core';\nimport { KHR_TEXTURE_TRANSFORM } from '../constants';\nimport { Transform } from './transform';\n\nconst NAME = KHR_TEXTURE_TRANSFORM;\n\n/** Documentation in {@link EXTENSIONS.md}. */\nexport class TextureTransform extends Extension {\n\tpublic readonly extensionName = NAME;\n\tpublic static readonly EXTENSION_NAME = NAME;\n\n\tpublic createTransform(): Transform {\n\t\treturn new Transform(this.doc.getGraph(), this);\n\t}\n\n\tpublic read(context: ReaderContext): this {\n\t\tfor (const [textureInfo, textureInfoDef] of Array.from(context.textureInfos.entries())) {\n\t\t\tif (!textureInfoDef.extensions || !textureInfoDef.extensions[NAME]) continue;\n\n\t\t\tconst transform = this.createTransform();\n\t\t\tconst transformDef = textureInfoDef.extensions[NAME];\n\n\t\t\tif (transformDef.offset !== undefined) transform.setOffset(transformDef.offset);\n\t\t\tif (transformDef.rotation !== undefined) transform.setRotation(transformDef.rotation);\n\t\t\tif (transformDef.scale !== undefined) transform.setScale(transformDef.scale);\n\t\t\tif (transformDef.texCoord !== undefined) transform.setTexCoord(transformDef.texCoord);\n\n\t\t\ttextureInfo.setExtension(NAME, transform);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic write(context: WriterContext): this {\n\t\tconst textureInfoEntries = Array.from(context.textureInfoDefMap.entries());\n\t\tfor (const [textureInfo, textureInfoDef] of textureInfoEntries) {\n\t\t\tconst transform = textureInfo.getExtension<Transform>(NAME);\n\t\t\tif (!transform) continue;\n\n\t\t\ttextureInfoDef.extensions = textureInfoDef.extensions || {};\n\t\t\ttextureInfoDef.extensions[NAME] = {\n\t\t\t\toffset: transform.getOffset(),\n\t\t\t\trotation: transform.getRotation(),\n\t\t\t\tscale: transform.getScale(),\n\t\t\t\ttexCoord: transform.getTexCoord(),\n\t\t\t};\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { TextureWebP } from './ext-texture-webp';\nimport { DracoMeshCompression } from './khr-draco-mesh-compression';\nimport { LightsPunctual } from './khr-lights-punctual';\nimport { MaterialsClearcoat } from './khr-materials-clearcoat';\nimport { MaterialsIOR } from './khr-materials-ior';\nimport { MaterialsPBRSpecularGlossiness } from './khr-materials-pbr-specular-glossiness';\nimport { MaterialsSheen } from './khr-materials-sheen';\nimport { MaterialsSpecular } from './khr-materials-specular';\nimport { MaterialsTransmission } from './khr-materials-transmission';\nimport { MaterialsUnlit } from './khr-materials-unlit';\nimport { MeshQuantization } from './khr-mesh-quantization';\nimport { TextureBasisu } from './khr-texture-basisu';\nimport { TextureTransform } from './khr-texture-transform';\n\nexport const KHRONOS_EXTENSIONS = [\n\tDracoMeshCompression,\n\tLightsPunctual,\n\tMaterialsClearcoat,\n\tMaterialsIOR,\n\tMaterialsPBRSpecularGlossiness,\n\tMaterialsSpecular,\n\tMaterialsSheen,\n\tMaterialsTransmission,\n\tMaterialsUnlit,\n\tMeshQuantization,\n\tTextureBasisu,\n\tTextureTransform,\n];\n\nexport const ALL_EXTENSIONS = [\n\tTextureWebP,\n\t...KHRONOS_EXTENSIONS,\n];\n\nexport * from './ext-texture-webp';\nexport * from './khr-draco-mesh-compression';\nexport * from './khr-lights-punctual';\nexport * from './khr-materials-clearcoat';\nexport * from './khr-materials-ior';\nexport * from './khr-materials-sheen';\nexport * from './khr-materials-specular';\nexport * from './khr-materials-pbr-specular-glossiness';\nexport * from './khr-materials-transmission';\nexport * from './khr-materials-unlit';\nexport * from './khr-mesh-quantization';\nexport * from './khr-texture-basisu';\nexport * from './khr-texture-transform';\n"],"names":["NAME","TextureWebP","Extension","constructor","this","PropertyType","TEXTURE","provide","context","jsonDoc","json","textures","forEach","textureDef","extensions","source","read","write","doc","getRoot","listTextures","texture","getMimeType","imageIndex","imageIndexMap","get","decoderModule","COMPONENT_ARRAY","DATA_TYPE","decodeGeometry","decoder","arrayBuffer","buffer","DecoderBuffer","Init","Int8Array","byteLength","GetEncodedGeometryType","TRIANGULAR_MESH","Error","dracoMesh","Mesh","DecodeBufferToMesh","ok","ptr","destroy","decodeIndex","mesh","numIndices","num_faces","Uint32Array","BYTES_PER_ELEMENT","_malloc","GetTrianglesUInt32Array","indices","HEAP32","slice","_free","decodeAttribute","attribute","accessorDef","dataType","componentType","ArrayCtor","numComponents","num_components","numValues","num_points","GetAttributeDataArrayForAllPoints","array","HEAPF32","DracoMeshCompression","PRIMITIVE","install","key","dependency","_decoderModule","5126","Float32Array","5125","5123","Uint16Array","5121","Uint8Array","5122","Int16Array","5120","DT_FLOAT32","DT_UINT32","DT_UINT16","DT_UINT8","DT_INT16","DT_INT8","logger","getLogger","Decoder","dracoMeshes","Map","meshDef","meshes","primDef","primitives","dracoDef","bufferView","bufferViewDef","bufferViews","bufferDef","buffers","compressedData","uri","resources","GLB_BUFFER","byteOffset","set","debug","semantic","attributes","accessors","dracoAttribute","GetAttributeByUniqueId","attributeArray","setArray","indicesArray","Array","from","values","dispose","warn","extensionName","LightType","Light","ExtensionProperty","NODE","undefined","Math","PI","copy","other","resolve","COPY_IDENTITY","super","_color","_intensity","_type","_range","_innerConeAngle","_outerConeAngle","getColor","setColor","color","getColorHex","ColorUtils","factorToHex","setColorHex","hex","hexToFactor","getIntensity","setIntensity","intensity","getType","setType","type","getRange","setRange","range","getInnerConeAngle","setInnerConeAngle","innerConeAngle","getOuterConeAngle","setOuterConeAngle","outerConeAngle","LightsPunctual","createLight","getGraph","lights","map","lightDef","light","setName","name","nodes","nodeDef","nodeIndex","setExtension","properties","size","lightDefs","lightIndexMap","property","getName","SPOT","push","length","listNodes","node","getExtension","nodeIndexMap","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Clearcoat","MATERIAL","graph","link","TextureInfo","_clearcoatFactor","_clearcoatRoughnessFactor","_clearcoatNormalScale","clearcoatTexture","setClearcoatTexture","getChild","getClearcoatTextureInfo","clearcoatTextureInfo","clearcoatRoughnessTexture","setClearcoatRoughnessTexture","getClearcoatRoughnessTextureInfo","clearcoatRoughnessTextureInfo","clearcoatNormalTexture","setClearcoatNormalTexture","getClearcoatNormalTextureInfo","clearcoatNormalTextureInfo","getClearcoatFactor","setClearcoatFactor","clearcoatFactor","getClearcoatTexture","getClearcoatRoughnessFactor","setClearcoatRoughnessFactor","clearcoatRoughnessFactor","getClearcoatRoughnessTexture","getClearcoatNormalScale","setClearcoatNormalScale","clearcoatNormalScale","getClearcoatNormalTexture","GraphChild","MaterialsClearcoat","createClearcoat","textureDefs","materials","materialDef","materialIndex","clearcoat","textureInfoDef","index","setTextureInfo","scale","listMaterials","material","materialIndexMap","textureInfo","createTextureInfoDef","IOR","_ior","getIOR","setIOR","ior","MaterialsIOR","createIOR","PBRSpecularGlossiness","_diffuseFactor","_specularFactor","_glossinessFactor","diffuseTexture","setDiffuseTexture","getDiffuseTextureInfo","diffuseTextureInfo","specularGlossinessTexture","setSpecularGlossinessTexture","getSpecularGlossinessTextureInfo","specularGlossinessTextureInfo","getDiffuseFactor","setDiffuseFactor","diffuseFactor","getDiffuseHex","setDiffuseHex","getDiffuseTexture","getSpecularFactor","setSpecularFactor","specularFactor","getGlossinessFactor","setGlossinessFactor","glossinessFactor","getSpecularGlossinessTexture","MaterialsPBRSpecularGlossiness","createPBRSpecularGlossiness","specGloss","Sheen","_sheenColorFactor","_sheenRoughnessFactor","sheenColorTexture","setSheenColorTexture","getSheenColorTextureInfo","sheenColorTextureInfo","sheenRoughnessTexture","setSheenRoughnessTexture","getSheenRoughnessTextureInfo","sheenRoughnessTextureInfo","getSheenColorFactor","getSheenColorHex","setSheenColorFactor","sheenColorFactor","setSheenColorHex","getSheenColorTexture","getSheenRoughnessFactor","setSheenRoughnessFactor","sheenRoughnessFactor","getSheenRoughnessTexture","MaterialsSheen","createSheen","sheen","Specular","specularTexture","setSpecularTexture","getSpecularTextureInfo","specularTextureInfo","getSpecularColorFactor","_specularColorFactor","setSpecularColorFactor","specularColorFactor","getSpecularColorHex","setSpecularColorHex","getSpecularTexture","MaterialsSpecular","createSpecular","specular","Transmission","_transmissionFactor","transmissionTexture","setTransmissionTexture","getTransmissionTextureInfo","transmissionTextureInfo","getTransmissionFactor","setTransmissionFactor","transmissionFactor","getTransmissionTexture","MaterialsTransmission","createTransmission","transmission","Unlit","MaterialsUnlit","createUnlit","MeshQuantization","_","TextureBasisu","Transform","TEXTURE_INFO","_offset","_rotation","_scale","_texCoord","getOffset","setOffset","offset","getRotation","setRotation","rotation","getScale","setScale","getTexCoord","setTexCoord","texCoord","TextureTransform","createTransform","textureInfos","entries","transform","transformDef","textureInfoEntries","textureInfoDefMap","KHRONOS_EXTENSIONS","ALL_EXTENSIONS"],"mappings":"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"}